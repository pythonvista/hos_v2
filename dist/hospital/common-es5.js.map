{"version":3,"sources":["src/app/frontDeskOfficer/front-desk-officer.service.ts","src/app/lab-attendant/lab-attendant.service.ts","src/app/payment/payment.service.ts","src/app/pharmacy/pharmacy.service.ts","src/app/shared/pagination/pagination.component.html","src/app/shared/pagination/pagination.component.ts","src/app/shared/pipes/age.pipe.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FrontDeskOfficerService {\n\n  constructor(private httpClient: HttpClient) { }\n  post(frontDeskOfficer) {\n    return this.httpClient.post('api/fdo', frontDeskOfficer);\n  }\n  get(page = 0, limit = 10, active = true) {\n    return this.httpClient.get(`api/fdos?page=${page}&limit=${limit}&active=${active}`);\n  }\n  getById(id) {\n    return this.httpClient.get(`api/fdo/${id}`);\n  }\n\n  update(id, value) {\n    return this.httpClient.put(`api/fdo/${id}`, value);\n  }\n\n  getFDOsList() {\n    return this.httpClient.get(`api/fdo/getFDOList`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LabAttendant } from '../_models/labAttendant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LabAttendantService {\n\n  constructor(private httpClient: HttpClient) { }\n  post(labAttendant) {\n    return this.httpClient.post('api/labAttendant', labAttendant);\n  }\n  get(page = 0, limit = 10, active = true) {\n    return this.httpClient.get(`api/labAttendants?page=${page}&limit=${limit}&active=${active}`);\n  }\n  getById(id) {\n    return this.httpClient.get(`api/labAttendant/${id}`);\n  }\n\n  upate(id, value) {\n    return this.httpClient.put(`api/labAttendant/${id}`, value);\n  }\n\n  getList() {\n    return this.httpClient.get(`api/labAttendantList`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Doctor } from '../_models/doctor';\nimport { Patient } from '../_models/patient';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentService {\n  constructor(private httpClient: HttpClient) { }\n\n  tempDoctor: Doctor = null;\n  tempPatient: Patient = null;\n\n  post(payment) {\n    return this.httpClient.post(`api/billing/create`, payment);\n  }\n\n  getAll(page = 0, limit = 10, fromDate = null, toDate = null) {\n    return this.httpClient.get(`api/billing/get?page=${page}&limit=${limit}&fromDate=${fromDate}&toDate=${toDate}`)\n  }\n\n  outstanding(page = 0, limit = 10, fromDate = null, toDate = null) {\n    return this.httpClient.get(`api/billing/outstanding?page=${page}&limit=${limit}&fromDate=${fromDate}&toDate=${toDate}`)\n  }\n\n  getById(id) {\n    console.log(id);\n    return this.httpClient.get(`api/billing/${id}`);\n  }\n\n  getByPatient(id, page = 0, limit = 10) {\n    return this.httpClient.get(`api/billing/patient/${id}?page=${page}&limit=${limit}`);\n  }\n\n\n  saveCheckout(p, d) {\n    this.tempDoctor = d;\n    this.tempPatient = p;\n  }\n\n  get getPatient() {\n    return this.tempPatient;\n  }\n\n  get getDoctor() {\n    return this.tempDoctor;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PharmacyService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  post(pharmacy) {\n    return this.httpClient.post('api/pharmacy', pharmacy);\n  }\n\n  get(page = 0, limit = 10, active = true) {\n    return this.httpClient.get(`api/pharmacies?page=${page}&limit=${limit}&active=${active}`);\n  }\n\n  getById(id) {\n    return this.httpClient.get(`api/pharmacy/${id}`);\n  }\n\n  update(id, value) {\n    return this.httpClient.put(`api/pharmacy/${id}`, value);\n  }\n\n  getPrescriptions(page = 0, limit = 10, date: Date = null) {\n    return this.httpClient.get(`api/pharmacy/getPrescriptions?date=${date}&page=${page}&limit=${limit}`);\n  }\n\n  getPrescription(id) {\n    return this.httpClient.get(`api/pharmacy/getPrescription/${id}`);\n  }\n\n  getPharmacyList() {\n    return this.httpClient.get(`api/phrmacyList/`);\n\n  }\n\n  updatePrescriptionStatus(id) {\n    return this.httpClient.put(`api/pharmacy/updatePrescription/${id}`, {});\n\n  }\n}\n","<div class=\"d-flex justify-content-between p-2\">\n  <ngb-pagination *ngIf=\"totalDocs > limit\" [collectionSize]=\"totalDocs\" [pageSize]=\"limit\" [(page)]=\"page\"\n    (pageChange)=\"pageChange($event)\">\n  </ngb-pagination>\n\n  <select class=\"custom-select\" style=\"width: auto\" name=\"pageSize\" (change)=\"limitChange()\" [(ngModel)]=\"limit\">\n    <option [ngValue]=10>10 per page</option>\n    <option [ngValue]=20>20 per page</option>\n    <option [ngValue]=25>25 per page</option>\n  </select>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class PaginationComponent implements OnInit {\n\n  @Output() onPageChange = new EventEmitter();\n\n  @Input() page: number;\n  @Input() limit: number;\n  @Input() totalDocs: number;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n  pageChange(page) {\n    this.page = page;\n    this.onPageChange.emit({ page: this.page, limit: this.limit });\n  }\n\n  limitChange() {\n    this.onPageChange.emit({ page: this.page, limit: this.limit });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n@Pipe({\n  name: 'age'\n})\nexport class AgePipe implements PipeTransform {\n\n  transform(value: Date): any {\n    let today = moment();\n    let birthdate = moment(value);\n    let years = today.diff(birthdate, 'years');\n    let html: string = years + \" yr \";\n\n    html += today.subtract(years, 'years').diff(birthdate, 'months') + \" mo\";\n\n    return html;\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}