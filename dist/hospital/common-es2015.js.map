{"version":3,"sources":["./src/app/frontDeskOfficer/front-desk-officer.service.ts","./src/app/lab-attendant/lab-attendant.service.ts","./src/app/payment/payment.service.ts","./src/app/pharmacy/pharmacy.service.ts","./src/app/shared/pagination/pagination.component.html","./src/app/shared/pagination/pagination.component.ts","./src/app/shared/pipes/age.pipe.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FrontDeskOfficerService {\n\n  constructor(private httpClient: HttpClient) { }\n  post(frontDeskOfficer) {\n    return this.httpClient.post('api/fdo', frontDeskOfficer);\n  }\n  get(page = 0, limit = 10, active = true) {\n    return this.httpClient.get(`api/fdos?page=${page}&limit=${limit}&active=${active}`);\n  }\n  getById(id) {\n    return this.httpClient.get(`api/fdo/${id}`);\n  }\n\n  update(id, value) {\n    return this.httpClient.put(`api/fdo/${id}`, value);\n  }\n\n  getFDOsList() {\n    return this.httpClient.get(`api/fdo/getFDOList`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LabAttendant } from '../_models/labAttendant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LabAttendantService {\n\n  constructor(private httpClient: HttpClient) { }\n  post(labAttendant) {\n    return this.httpClient.post('api/labAttendant', labAttendant);\n  }\n  get(page = 0, limit = 10, active = true) {\n    return this.httpClient.get(`api/labAttendants?page=${page}&limit=${limit}&active=${active}`);\n  }\n  getById(id) {\n    return this.httpClient.get(`api/labAttendant/${id}`);\n  }\n\n  upate(id, value) {\n    return this.httpClient.put(`api/labAttendant/${id}`, value);\n  }\n\n  getList() {\n    return this.httpClient.get(`api/labAttendantList`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Doctor } from '../_models/doctor';\nimport { Patient } from '../_models/patient';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentService {\n  constructor(private httpClient: HttpClient) { }\n\n  tempDoctor: Doctor = null;\n  tempPatient: Patient = null;\n\n  post(payment) {\n    return this.httpClient.post(`api/billing/create`, payment);\n  }\n\n  getAll(page = 0, limit = 10, fromDate = null, toDate = null) {\n    return this.httpClient.get(`api/billing/get?page=${page}&limit=${limit}&fromDate=${fromDate}&toDate=${toDate}`)\n  }\n\n  outstanding(page = 0, limit = 10, fromDate = null, toDate = null) {\n    return this.httpClient.get(`api/billing/outstanding?page=${page}&limit=${limit}&fromDate=${fromDate}&toDate=${toDate}`)\n  }\n\n  getById(id) {\n    console.log(id);\n    return this.httpClient.get(`api/billing/${id}`);\n  }\n\n  getByPatient(id, page = 0, limit = 10) {\n    return this.httpClient.get(`api/billing/patient/${id}?page=${page}&limit=${limit}`);\n  }\n\n\n  saveCheckout(p, d) {\n    this.tempDoctor = d;\n    this.tempPatient = p;\n  }\n\n  get getPatient() {\n    return this.tempPatient;\n  }\n\n  get getDoctor() {\n    return this.tempDoctor;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PharmacyService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  post(pharmacy) {\n    return this.httpClient.post('api/pharmacy', pharmacy);\n  }\n\n  get(page = 0, limit = 10, active = true) {\n    return this.httpClient.get(`api/pharmacies?page=${page}&limit=${limit}&active=${active}`);\n  }\n\n  getById(id) {\n    return this.httpClient.get(`api/pharmacy/${id}`);\n  }\n\n  update(id, value) {\n    return this.httpClient.put(`api/pharmacy/${id}`, value);\n  }\n\n  getPrescriptions(page = 0, limit = 10, date: Date = null) {\n    return this.httpClient.get(`api/pharmacy/getPrescriptions?date=${date}&page=${page}&limit=${limit}`);\n  }\n\n  getPrescription(id) {\n    return this.httpClient.get(`api/pharmacy/getPrescription/${id}`);\n  }\n\n  getPharmacyList() {\n    return this.httpClient.get(`api/phrmacyList/`);\n\n  }\n\n  updatePrescriptionStatus(id) {\n    return this.httpClient.put(`api/pharmacy/updatePrescription/${id}`, {});\n\n  }\n}\n","<div class=\"d-flex justify-content-between p-2\">\n  <ngb-pagination *ngIf=\"totalDocs > limit\" [collectionSize]=\"totalDocs\" [pageSize]=\"limit\" [(page)]=\"page\"\n    (pageChange)=\"pageChange($event)\">\n  </ngb-pagination>\n\n  <select class=\"custom-select\" style=\"width: auto\" name=\"pageSize\" (change)=\"limitChange()\" [(ngModel)]=\"limit\">\n    <option [ngValue]=10>10 per page</option>\n    <option [ngValue]=20>20 per page</option>\n    <option [ngValue]=25>25 per page</option>\n  </select>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class PaginationComponent implements OnInit {\n\n  @Output() onPageChange = new EventEmitter();\n\n  @Input() page: number;\n  @Input() limit: number;\n  @Input() totalDocs: number;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n  pageChange(page) {\n    this.page = page;\n    this.onPageChange.emit({ page: this.page, limit: this.limit });\n  }\n\n  limitChange() {\n    this.onPageChange.emit({ page: this.page, limit: this.limit });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n@Pipe({\n  name: 'age'\n})\nexport class AgePipe implements PipeTransform {\n\n  transform(value: Date): any {\n    let today = moment();\n    let birthdate = moment(value);\n    let years = today.diff(birthdate, 'years');\n    let html: string = years + \" yr \";\n\n    html += today.subtract(years, 'years').diff(birthdate, 'months') + \" mo\";\n\n    return html;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}