{"version":3,"sources":["./src/app/hospitals/add/add.component.html","./src/app/hospitals/add/add.component.ts","./src/app/hospitals/dashboard/dashboard.component.html","./src/app/hospitals/dashboard/dashboard.component.ts","./src/app/hospitals/hospital.service.ts","./src/app/hospitals/hospitals-routing.module.ts","./src/app/hospitals/hospitals.module.ts","./src/app/hospitals/list/list.component.html","./src/app/hospitals/list/list.component.ts","./src/app/hospitals/profile/profile.component.html","./src/app/hospitals/profile/profile.component.ts"],"names":[],"mappings":"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","file":"hospitals-hospitals-module-ngfactory-es2015.js","sourcesContent":["<div class=\"card\">\n    <div class=\"card-body\" *ngIf=\"!isLoader\">\n        <h5 class=\"card-title\">Basic Information</h5>\n        <div [formGroup]=\"form\" class=\"form-material form-horizontal\">\n            <div class=\"\">\n                <div class=\"col-md-4 pt-3 float-right\">\n                    <div class=\"card\">\n                        <input type=\"file\" (change)=\"uploader.uploadAll()\" ng2FileSelect [uploader]=\"uploader\" #inp\n                            style=\"display: none;\" />\n                        <div class=\"card-header text-center\">\n                            <div class=\"edit-img\">\n                                <img *ngIf=\"!f.image.value\" [src]=\"url\" alt=\"\" class=\"rounded-circle\">\n                                <img *ngIf=\"f.image.value\" [src]=\"f.image.value|imageSrc\" alt=\"\" class=\"rounded-circle\">\n                            </div>\n                        </div>\n                        <div class=\"card-body\">\n                            <button (click)=\"inputClick()\" class=\"btn btn-primary btn-block pt-2\"\n                                style=\"background: #50dff9; border: none;\">\n                                <label>\n                                    Upload\n                                </label>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"col-md-12\" for=\"example-text\">Name\n                    </label>\n                    <div class=\"col-md-12 capatalize-text\">\n                        <input type=\"text\" alphaspace formControlName=\"name\" name=\"example-text\" class=\"form-control\"\n                            placeholder=\"enter  name\">\n                        <small *ngIf=\"isFormSubmitted && f.name.errors && f.name.errors.required\" class=\"text-danger\">\n                            Name is Required.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"col-md-12\" for=\"example-text\">E-mail\n                    </label>\n                    <div class=\"col-md-12\">\n                        <input type=\"email\" formControlName=\"email\" name=\"example-text\" class=\"form-control\"\n                            placeholder=\"Enter  e-mail\">\n                        <small *ngIf=\"isFormSubmitted && f.email.errors && f.email.errors.required\" class=\"text-danger\">\n                            Email is Required.\n                        </small>\n                        <small *ngIf=\"isFormSubmitted && f.email.errors && f.email.errors.email\" class=\"text-danger\">\n                            Email must be a valid email address.\n                        </small>\n                    </div>\n                </div>\n                <div *ngIf=\"!isEdit\" class=\"form-group\">\n                    <label class=\"col-md-12\" for=\"example-text\">Password\n                    </label>\n                    <div class=\"col-md-12\">\n                        <input type=\"password\" formControlName=\"password\" name=\"example-text\" class=\"form-control\"\n                            placeholder=\"Enter  Password\">\n                        <small *ngIf=\"isFormSubmitted && f.password.errors && f.password.errors.required\"\n                            class=\"text-danger\">\n                            Password is Required.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"col-md-12\" for=\"example-text\">Hospital Address\n                    </label>\n                    <div class=\"col-md-12 capatalize-text\">\n                        <input type=\"text\" formControlName=\"address\" name=\"example-text\" class=\"form-control\"\n                            placeholder=\"enter  Address\">\n                        <small *ngIf=\"isFormSubmitted && f.address.errors && f.address.errors.required\"\n                            class=\"text-danger\">\n                            Address is Required.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"col-md-12\" for=\"example-text\">City\n                    </label>\n                    <div class=\"col-md-12 capatalize-text\">\n                        <input type=\"text\" alphaspace formControlName=\"city\" name=\"example-text\" class=\"form-control\"\n                            placeholder=\"enter  city\">\n                        <small *ngIf=\"isFormSubmitted && f.city.errors && f.city.errors.required\" class=\"text-danger\">\n                            City is Required.\n                        </small>\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-md-12\">State</label>\n                <div class=\"col-md-12\">\n                    <select formControlName=\"state\" class=\"form-control\">\n                        <option value=\"\">Select State</option>\n                        <option *ngFor=\"let st of states\" [value]=\"st\">{{st}}</option>\n                    </select>\n                    <small *ngIf=\"isFormSubmitted && f.state.errors && f.state.errors.required\" class=\"text-danger\">\n                        State is Required.\n                    </small>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-md-12\" for=\"example-text\">Hotline\n                </label>\n                <div class=\"col-md-12\">\n                    <input type=\"text\" num formControlName=\"phone\" name=\"example-text\" class=\"form-control\"\n                        placeholder=\"enter  number\">\n                    <small *ngIf=\"isFormSubmitted && f.phone.errors && f.phone.errors.required\" class=\"text-danger\">\n                        Phone is Required.\n                    </small>\n\n                    <small *ngIf=\"isFormSubmitted && f.phone.errors && f.phone.errors?.maxlength\" class=\"text-danger\">\n                        Phone Number's length is exceeded\n                    </small>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-md-12\" for=\"example-text\">Director Name\n                </label>\n                <div class=\"col-md-12\">\n                    <input type=\"text\" formControlName=\"directorName\" name=\"example-text\" class=\"form-control\"\n                        placeholder=\"enter  Director Name\">\n                    <small *ngIf=\"isFormSubmitted && f.directorName.errors && f.directorName.errors.required\"\n                        class=\"text-danger\">\n                        Director Name is Required.\n                    </small>\n\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-md-12\" for=\"example-text\">Director Phone\n                </label>\n                <div class=\"col-md-12\">\n                    <input type=\"text\" num formControlName=\"directorPhone\" name=\"example-text\" class=\"form-control\"\n                        placeholder=\"Enter Director number\">\n                    <small *ngIf=\"isFormSubmitted && f.directorPhone.errors && f.directorPhone.errors.required\"\n                        class=\"text-danger\">\n                        Director Phone is Required.\n                    </small>\n                    <small *ngIf=\"isFormSubmitted && f.directorPhone.errors && f.directorPhone.errors?.maxlength\"\n                        class=\"text-danger\">\n                        Phone Number's length is exceeded\n                    </small>\n                </div>\n            </div>\n\n            <!-- Description -->\n            <div class=\"form-group\">\n                <label class=\"col-md-12\">Description</label>\n                <div class=\"col-md-12\">\n                    <textarea formControlName=\"description\" class=\"form-control\" rows=\"3\"></textarea>\n                    <!-- Description Validation -->\n                    <!-- <small *ngIf=\"isFormSubmitted && f.description.errors && f.description.errors.required\"\n                        class=\"text-danger\">\n                        Description is required\n                    </small> -->\n                </div>\n            </div>\n            <div class=\"text-right\">\n                <button type=\"button\" [routerLink]=\"['/app/hospitals']\"\n                    class=\"btn btn-dark waves-effect waves-light\">Cancel</button>\n                <button type=\"submit\" (click)=\"onSave()\"\n                    class=\"btn btn-info waves-effect waves-light m-l-10\">Submit</button>\n            </div>\n\n\n        </div>\n    </div>\n    <loader *ngIf=\"isLoader\"></loader>\n\n    <!-- Update Password -->\n    <div *ngxPermissionsOnly=\"['hospital']\" class=\"modal-body\">\n        <h5 class=\"card-title\">Password & Security</h5>\n        <form [formGroup]=\"passwordForm\" class=\"form-horizontal form-material\">\n            <div class=\"form-group\">\n                <!-- Old Password -->\n                <div class=\"col-md-12 m-b-20\">\n                    <label class=\"col-md-12\" for=\"example-text\">Current Password</label>\n                    <input formControlName=\"password\" type=\"password\" class=\"form-control\"\n                        placeholder=\"Current Password\">\n                    <app-errors [form_control]=\"f2.password\" [isSubmitted]=\"isPasswordFromSubmit\"></app-errors>\n                </div>\n                <!-- New Password -->\n                <div class=\"col-md-12 m-b-20\">\n                    <label class=\"col-md-12\" for=\"example-text\">New Password</label>\n                    <input formControlName=\"newPassword\" type=\"password\" class=\"form-control\"\n                        placeholder=\"New Password\">\n                    <app-errors [form_control]=\"f2.newPassword\" [isSubmitted]=\"isPasswordFromSubmit\"></app-errors>\n                </div>\n                <!-- Confirm Password -->\n                <div class=\"col-md-12 m-b-20\">\n                    <label class=\"col-md-12\" for=\"example-text\">Confirm New Password\n                    </label>\n                    <input formControlName=\"confirmNewPassword\" type=\"password\" class=\"form-control\"\n                        placeholder=\"Confirm New Password\">\n                    <app-errors [form_control]=\"f2.confirmNewPassword\" [isSubmitted]=\"isPasswordFromSubmit\">\n                    </app-errors>\n                </div>\n            </div>\n        </form>\n        <div class=\"modal-footer\">\n            <a (click)=\"onSubmitPasswordForm()\" class=\"btn btn-info text-white waves-effect\">Change Password</a>\n        </div>\n    </div>\n\n\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { HospitalService } from '../hospital.service';\nimport { ResponseMessage } from 'src/app/_models/response';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { NotifyService } from 'src/app/shared/notify.service';\nimport { states } from 'src/app/_constants/states';\nimport { AuthService } from 'src/app/auth.service';\nimport { NotifierService } from 'angular-notifier';\nimport { FileUploader } from 'ng2-file-upload';\nimport { HosRequestService } from 'src/app/request/hos-request.service';\nimport Swal from 'sweetalert2';\nimport { ConfirmPasswordValidator } from 'src/app/_helpers/confirm-password';\n\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n  isLoader = false;\n  url: string = `${environment.base_url}images/user.jpg`;\n  public uploader: FileUploader = new FileUploader({ url: `${environment.base_url}api/upload` });\n\n  form: FormGroup;\n  isFormSubmitted = false;\n\n  isPasswordFromSubmit = false;\n  passwordForm: FormGroup;\n\n  states = states;\n  returnUrl;\n  hospitalId;\n  isEdit = false;\n  hospital;\n\n  constructor(private formBuilder: FormBuilder,\n    private formBuilder2: FormBuilder,\n    private hospitalService: HospitalService,\n    private hosRequestService: HosRequestService,\n    private userService: AuthService,\n    private router: Router,\n    public notifier: NotifierService,\n    private notifyService: NotifyService,\n    private activatedRoute: ActivatedRoute,\n  ) { }\n\n  @ViewChild('inp', { static: false }) inp: ElementRef;\n  ngOnInit() {\n    // this.returnUrl = this.activatedRoute.snapshot.queryParams['returnUrl'] || 'app/doctor';\n    this.activatedRoute.params.subscribe(params => {\n      this.hospitalId = (params['id']);\n      // if route is coming form request page\n      if (this.hospitalId && this.router.url.includes(\"request\")) {\n        this.getRequestData(this.hospitalId);\n      }\n      else if (this.hospitalId) {\n        this.getHospital(this.hospitalId);\n        this.isEdit = true;\n      }\n      this.createForm();\n      this.createPasswordForm();\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      if (this.uploader.queue.length > 1) {\n        this.uploader.removeFromQueue(this.uploader.queue[0]);\n      }\n      file.onSuccess = (res: any) => {\n        this.f.image.patchValue(JSON.parse(res).url);\n      };\n    };\n\n\n  }\n\n  getHospital(id) {\n    this.isLoader = true;\n    this.hospitalService.getById(id).subscribe((res: any) => {\n      if (+res.status === 200) {\n        this.hospital = res.data;\n        this.form.patchValue({\n          name: this.hospital.user.name,\n          email: this.hospital.user.email,\n          password: this.hospital.user.password,\n          address: this.hospital.user.address,\n          image: this.hospital.user.image,\n          city: this.hospital.user.city,\n          state: this.hospital.user.state,\n          phone: this.hospital.user.phone,\n          directorName: this.hospital.directorName,\n          directorPhone: this.hospital.directorPhone,\n          description: this.hospital.description,\n        });\n\n        this.isLoader = false;\n      } else {\n        this.router.navigate(['app/hospitals']);\n      }\n    })\n  }\n\n  getRequestData(id) {\n    this.hosRequestService.get(id).subscribe((res: any) => {\n      if (+res.status === 200) {\n        console.log(res);\n        this.form.patchValue(res.body.data);\n      } else {\n        this.router.navigate(['/app/request'])\n      }\n    })\n  }\n\n  createForm() {\n    this.form = this.formBuilder.group(\n      {\n        name: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', Validators.required],\n        address: ['', Validators.required],\n        image: [''],\n        city: ['', Validators.required],\n        state: ['', Validators.required],\n        phone: ['', [Validators.required, Validators.maxLength(15)]],\n        directorName: ['', Validators.required],\n        directorPhone: ['', [Validators.required, Validators.maxLength(15)]],\n        description: [''],\n        role: ['hospital']\n      }\n    )\n  }\n\n  get f() { return this.form.controls; }\n\n  onSave() {\n    console.log(this.form.invalid)\n    this.isFormSubmitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    if (this.hospitalId && this.isEdit) {\n      this.updateUser();\n      return;\n    }\n\n\n    console.log(this.form.value)\n    this.hospitalService.post(this.form.value)\n      .subscribe((response: ResponseMessage) => {\n        if (response.status == '200') {\n          if (this.hospitalId && this.router.url.includes(\"request\")) {\n            this.updateStatus(); // updates request status\n          }\n          this.notifyService.success('Hospital Added Successfully.');\n          // navigate to list page\n          this.router.navigate(['app/hospitals']);\n        }\n      });\n\n  }\n\n  updateUser() {\n    let user = this.hospital.user;\n    user.address = this.f['address'].value;\n    user.city = this.f['city'].value;\n    user.email = this.f['email'].value;\n    user.image = this.f['image'].value || this.hospital.user.image;\n    user.name = this.f['name'].value;\n    user.phone = this.f['phone'].value;\n    user.state = this.f['state'].value;\n    user.hospital = this.hospital._id;\n    console.log(user);\n    this.userService.updateUser(this.hospital.user._id, user).subscribe((res: any) => {\n      if (res.status === 200) {\n        this.updateHospital();\n      }\n      else {\n        this.notifyService.success('Hospital Updated Successfully.');\n        this.router.navigate(['app/hospitals/']);\n      }\n    })\n  }\n\n  // Updates Hospital\n  updateHospital() {\n    this.hospitalService.putHospital(this.hospital._id, this.form.value).subscribe((res: any) => {\n      if (res.status === 200) {\n        // navigate to list page\n        this.showNotification('success', 'Hospital Updated Successfully.');\n        this.router.navigate(['app/hospitals/']);\n      }\n      else {\n        this.showNotification('error', 'An Error Occured');\n        this.router.navigate(['app/hospitals/']);\n      }\n    })\n  }\n\n  inputClick() {\n    this.inp.nativeElement.click();\n  }\n\n  // Shows Notifications\n  public showNotification(type: string, message: string): void {\n    this.notifier.notify(type, message);\n  }\n\n\n  updateStatus() {\n    this.hosRequestService.updateStatus(this.hospitalId, { status: 2 }).subscribe((res: any) => {\n      if (+res.status === 200) {\n        console.log(\"Request status Updated\");\n      }\n    })\n  }\n\n  // password Section Form\n  createPasswordForm() {\n    this.passwordForm = this.formBuilder2.group({\n      password: ['', [Validators.required]],\n      newPassword: ['', [Validators.required]],\n      confirmNewPassword: ['', [Validators.required]],\n    }, {\n      validator: ConfirmPasswordValidator('newPassword', 'confirmNewPassword')\n    });\n  }\n\n  get f2() { return this.passwordForm.controls; }\n\n  // password Section Submit Button Actions\n  onSubmitPasswordForm() {\n    this.isPasswordFromSubmit = true;\n    if (this.passwordForm.invalid) {\n      return;\n    }\n\n    this.userService.updatePassword(this.passwordForm.value).subscribe((res: any) => {\n      if (+res.status === 200) {\n        Swal.fire('Password Updated!', '', 'success');\n        this.userService.logout();\n        this.router.navigate(['/login']);\n        this.passwordForm.reset();\n        this.isPasswordFromSubmit = false;\n      } else {\n        Swal.fire({ icon: 'error', title: 'Error!', text: 'Password Updation Failed', })\n      }\n    }, err => {\n      Swal.fire({ icon: 'error', title: 'Error!', text: 'Password  Invalid', })\n    });\n  }\n\n}\n","<div *ngIf=\"!isLoader\">\n  <div class=\"row\">\n    <!-- Column -->\n    <div class=\"col-lg-3 col-md-6\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"d-flex no-block\">\n            <div class=\"round align-self-center round-success\">\n              <i class=\"fa fa-flask\"></i>\n            </div>\n            <div class=\"m-l-10 align-self-center\">\n              <h3 class=\"m-b-0\">{{ apppointmentCount }}</h3>\n              <h5 class=\"text-muted m-b-0\">Scheduled Appointments</h5>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Column -->\n    <!-- Column -->\n    <div class=\"col-lg-2 col-md-6\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"d-flex no-block\">\n            <div class=\"round align-self-center round-info\">\n              <i class=\"fa fa-user-md\"></i>\n            </div>\n            <div class=\"m-l-10 align-self-center\">\n              <h3 class=\"m-b-0\">{{ doctorCount }}</h3>\n              <h5 class=\"text-muted m-b-0\">Doctors</h5>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Column -->\n    <!-- Column -->\n    <div class=\"col-lg-2 col-md-6\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"d-flex no-block\">\n            <div class=\"round align-self-center round-danger\">\n              <i class=\"fa fa-users\"></i>\n            </div>\n            <div class=\"m-l-10 align-self-center\">\n              <h3 class=\"m-b-0\">{{ patientCount }}</h3>\n              <h5 class=\"text-muted m-b-0\">Patients</h5>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Column -->\n    <!-- Column -->\n    <div class=\"col-lg-2 col-md-6\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"d-flex no-block\">\n            <div class=\"round align-self-center round-success\">\n              <i class=\"fa fa-calendar\"></i>\n            </div>\n            <div class=\"m-l-10 align-self-center\">\n              <h3 class=\"m-b-0\">{{ pharmacistsCount }}</h3>\n              <h5 class=\"text-muted m-b-0\">Pharmacists</h5>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Column -->\n    <!-- Column -->\n    <div class=\"col-lg-3 col-md-6\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"d-flex no-block\">\n            <div class=\"round align-self-center round-success\">\n              <i class=\"fa fa-calendar\"></i>\n            </div>\n            <div class=\"m-l-10 align-self-center\">\n              <h3 class=\"m-b-0\">{{ labAttendantCount }}</h3>\n              <h5 class=\"text-muted m-b-0\">Lab Scientists</h5>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Column -->\n  </div>\n  <!-- Row -->\n  <!-- .row -->\n  <div class=\"row\">\n    <div class=\"col-md-4 col-sm-12 col-xs-12\">\n      <div *ngIf=\"isAppointmentChartLoaded\" class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">\n            <small class=\"float-right text-success\">\n              <!-- <i class=\"fa fa-sort-asc\"></i> --> </small\n            >Appointments\n          </h5>\n        </div>\n        <div style=\"display: block\">\n          <div id=\"chart-container\">\n            <canvas\n              #myCanvas\n              id=\"canvas\"\n              baseChart\n              [chartType]=\"chartType\"\n              [datasets]=\"appointmentChartData\"\n              [labels]=\"chartLabels\"\n              [colors]=\"chartColors1\"\n              [options]=\"chartOptions\"\n            ></canvas>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-4 col-sm-12 col-xs-12\">\n      <div *ngIf=\"isPatientChartLoaded\" class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">\n            <small class=\"float-right text-success\">\n              <!-- <i class=\"fa fa-sort-asc\"></i> --> </small\n            >Patients\n          </h5>\n        </div>\n        <div style=\"display: block\">\n          <div id=\"chart-container\">\n            <canvas\n              #myCanvas\n              id=\"canvas\"\n              baseChart\n              [chartType]=\"chartType\"\n              [datasets]=\"patientChartData\"\n              [labels]=\"chartLabels\"\n              [colors]=\"chartColors2\"\n              [options]=\"chartOptions\"\n            ></canvas>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-4 col-sm-12 col-xs-12\">\n      <div *ngIf=\"isPaymentChartLoaded\" class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">\n            <small class=\"float-right text-danger\">\n              <!-- <i class=\"fa fa-sort-desc\"></i> --> </small\n            >Payments\n          </h5>\n        </div>\n        <div style=\"display: block\">\n          <div id=\"chart-container\">\n            <canvas\n              #myCanvas\n              id=\"canvas\"\n              baseChart\n              chartType=\"bar\"\n              [datasets]=\"paymentChartData\"\n              [labels]=\"chartLabels\"\n              [colors]=\"chartColors\"\n              [options]=\"chartOptions\"\n            ></canvas>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- /.row -->\n  <!--row -->\n  <!-- <div class=\"row\">\n    <div class=\"col-md-6 col-lg-6 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Patients In</h5>\n                <ul class=\"list-inline text-center\">\n                    <li>\n                        <h5><i class=\"fa fa-circle m-r-5\" style=\"color: #00bfc7;\"></i>OPD</h5>\n                    </li>\n                    <li>\n                        <h5><i class=\"fa fa-circle m-r-5\" style=\"color: #b4becb;\"></i>ICU</h5>\n                    </li>\n                </ul>\n\n  <div>\n    <div style=\"display: block\">\n      <canvas baseChart\n              [datasets]=\"barChartData\"\n              [labels]=\"mbarChartLabels\"\n              [options]=\"barChartOptions\"\n              [colors]=\"barChartColors\"\n              [legend]=\"barChartLegend\"\n              [chartType]=\"barChartType\"\n              (chartHover)=\"chartHovered($event)\"\n              (chartClick)=\"chartClicked($event)\"></canvas>\n    </div>\n\n\n  </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-6 col-lg-6 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Hospital Earning</h5>\n                <ul class=\"list-inline text-center\">\n                    <li>\n                        <h5><i class=\"fa fa-circle m-r-5\" style=\"color: #00bfc7;\"></i>OPD</h5>\n                    </li>\n                    <li>\n                        <h5><i class=\"fa fa-circle m-r-5\" style=\"color: #b4becb;\"></i>ICU</h5>\n                    </li>\n                </ul>\n  <div>\n    <div style=\"display: block\">\n      <canvas baseChart\n              [datasets]=\"barChartData\"\n              [labels]=\"mbarChartLabels\"\n              [options]=\"barChartOptions\"\n              [colors]=\"barChartColors\"\n              [legend]=\"barChartLegend\"\n              [chartType]=\"barChartType\"\n              (chartHover)=\"chartHovered($event)\"\n              (chartClick)=\"chartClicked($event)\"></canvas>\n    </div>\n\n\n  </div>\n            </div>\n        </div>\n    </div>\n</div> -->\n  <!-- row -->\n  <!-- /row -->\n  <div class=\"row\">\n    <div class=\"col-sm-12\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title m-b-0\">New Patients List</h5>\n          <p class=\"text-muted\">Recent Patients added</p>\n          <div class=\"table-responsive\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                  <th>State</th>\n                  <th>Medfest ID</th>\n                  <th>Phone</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr\n                  *ngFor=\"let h of patients; let i = index\"\n                  (click)=\"gotoPatientProfile(h._id)\"\n                >\n                  <td>{{ i + 1 }}</td>\n                  <td>{{ h.name }}</td>\n                  <td>{{ h.state }}</td>\n                  <td>{{ h.username }}</td>\n                  <td>{{ h.phone }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- bar graph -->\n  <div class=\"row\">\n    <div class=\"col-sm-12\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title m-b-0\">Payments</h5>\n          <p class=\"text-muted\">Recent Payments in this month</p>\n          <div class=\"table-responsive\">\n            <table class=\"table\">\n              <thead>\n                <tr role=\"row\">\n                  <th\n                    class=\"sorting_asc\"\n                    tabindex=\"0\"\n                    aria-controls=\"myTable\"\n                    rowspan=\"1\"\n                    colspan=\"1\"\n                    aria-sort=\"ascending\"\n                    aria-label=\"No: activate to sort column descending\"\n                    style=\"width: 61px\"\n                  >\n                    No\n                  </th>\n                  <th\n                    class=\"sorting\"\n                    tabindex=\"0\"\n                    aria-controls=\"myTable\"\n                    rowspan=\"1\"\n                    colspan=\"1\"\n                    aria-label=\"Patient: activate to sort column ascending\"\n                    style=\"width: 202px\"\n                  >\n                    Patient\n                  </th>\n                  <th\n                    class=\"sorting\"\n                    tabindex=\"0\"\n                    aria-controls=\"myTable\"\n                    rowspan=\"1\"\n                    colspan=\"1\"\n                    aria-label=\"Doctor: activate to sort column ascending\"\n                    style=\"width: 166px\"\n                  >\n                    Doctor\n                  </th>\n                  <th\n                    class=\"sorting\"\n                    tabindex=\"0\"\n                    aria-controls=\"myTable\"\n                    rowspan=\"1\"\n                    colspan=\"1\"\n                    aria-label=\"Date: activate to sort column ascending\"\n                    style=\"width: 119px\"\n                  >\n                    Date\n                  </th>\n                  <th\n                    class=\"sorting\"\n                    tabindex=\"0\"\n                    aria-controls=\"myTable\"\n                    rowspan=\"1\"\n                    colspan=\"1\"\n                    aria-label=\"Charges: activate to sort column ascending\"\n                    style=\"width: 130px\"\n                  >\n                    Charges\n                  </th>\n                  <th\n                    class=\"sorting\"\n                    tabindex=\"0\"\n                    aria-controls=\"myTable\"\n                    rowspan=\"1\"\n                    colspan=\"1\"\n                    aria-label=\"Discount: activate to sort column ascending\"\n                    style=\"width: 134px\"\n                  >\n                    Discount\n                  </th>\n                  <th\n                    class=\"sorting\"\n                    tabindex=\"0\"\n                    aria-controls=\"myTable\"\n                    rowspan=\"1\"\n                    colspan=\"1\"\n                    aria-label=\"Total: activate to sort column ascending\"\n                    style=\"width: 89px\"\n                  >\n                    Total\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr\n                  *ngFor=\"let items of billsList; let i = index\"\n                  (click)=\"onClick(items._id)\"\n                  role=\"row\"\n                  class=\"odd\"\n                >\n                  <td class=\"sorting_1\">{{ i + page * limit + 1 }}</td>\n                  <td>{{ items?.patient.name }}</td>\n                  <td>{{ items?.doctor.name }}</td>\n                  <td>{{ items?.createdAt | date : \"d/MMM/y\" }}</td>\n                  <td>{{ getSubTotal(i) | currency : \"&#8358;\" }}</td>\n                  <td>{{ items?.discount }}%</td>\n                  <td>{{ applyDiscount(i) | currency : \"&#8358;\" }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- patients outstanding payments -->\n  <!-- bar graph -->\n  <div class=\"row\">\n    <div class=\"col-sm-12\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title m-b-0\">Oustanding Payments</h5>\n          <p class=\"text-muted\">Recent Outstanding Payments</p>\n          <div class=\"table-responsive\">\n            <table class=\"table\">\n              <thead>\n                <tr role=\"row\">\n                  <th\n                    class=\"sorting_asc\"\n                    tabindex=\"0\"\n                    aria-controls=\"myTable\"\n                    rowspan=\"1\"\n                    colspan=\"1\"\n                    aria-sort=\"ascending\"\n                    aria-label=\"No: activate to sort column descending\"\n                    style=\"width: 61px\"\n                  >\n                    No\n                  </th>\n                  <th\n                    class=\"sorting\"\n                    tabindex=\"0\"\n                    aria-controls=\"myTable\"\n                    rowspan=\"1\"\n                    colspan=\"1\"\n                    aria-label=\"Patient: activate to sort column ascending\"\n                    style=\"width: 202px\"\n                  >\n                    Patient\n                  </th>\n                  <th\n                    class=\"sorting\"\n                    tabindex=\"0\"\n                    aria-controls=\"myTable\"\n                    rowspan=\"1\"\n                    colspan=\"1\"\n                    aria-label=\"Doctor: activate to sort column ascending\"\n                    style=\"width: 166px\"\n                  >\n                    Doctor\n                  </th>\n                  <th\n                    class=\"sorting\"\n                    tabindex=\"0\"\n                    aria-controls=\"myTable\"\n                    rowspan=\"1\"\n                    colspan=\"1\"\n                    aria-label=\"Date: activate to sort column ascending\"\n                    style=\"width: 119px\"\n                  >\n                    Date\n                  </th>\n                  <th\n                    class=\"sorting\"\n                    tabindex=\"0\"\n                    aria-controls=\"myTable\"\n                    rowspan=\"1\"\n                    colspan=\"1\"\n                    aria-label=\"Charges: activate to sort column ascending\"\n                    style=\"width: 130px\"\n                  >\n                    Charges\n                  </th>\n                  <th\n                    class=\"sorting\"\n                    tabindex=\"0\"\n                    aria-controls=\"myTable\"\n                    rowspan=\"1\"\n                    colspan=\"1\"\n                    aria-label=\"Discount: activate to sort column ascending\"\n                    style=\"width: 134px\"\n                  >\n                    Discount\n                  </th>\n                  <th\n                    class=\"sorting\"\n                    tabindex=\"0\"\n                    aria-controls=\"myTable\"\n                    rowspan=\"1\"\n                    colspan=\"1\"\n                    aria-label=\"Total: activate to sort column ascending\"\n                    style=\"width: 89px\"\n                  >\n                    Total\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr\n                  *ngFor=\"let items of outstandingPayments; let i = index\"\n                  (click)=\"onClick(items._id)\"\n                  role=\"row\"\n                  class=\"odd\"\n                >\n                  <td class=\"sorting_1\">{{ i + page * limit + 1 }}</td>\n                  <td>{{ items?.patient.name }}</td>\n                  <td>{{ items?.doctor.name }}</td>\n                  <td>{{ items?.createdAt | date : \"d/MMM/y\" }}</td>\n                  <td>{{ getSubTotal(i) | currency : \"&#8358;\" }}</td>\n                  <td>{{ items?.discount }}%</td>\n                  <td>{{ applyDiscount(i) | currency : \"&#8358;\" }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- first time this year -->\n  <div class=\"row\">\n    <div class=\"col-sm-12\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title m-b-0\">Recent Patients</h5>\n          <p class=\"text-muted\">Recent Patients coming for the first time this year</p>\n          <div class=\"table-responsive\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                  <th>State</th>\n                  <th>Medfest ID</th>\n                  <th>Phone</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr\n                  *ngFor=\"let h of firstTimePatients; let i = index\"\n                  (click)=\"gotoPatientProfile(h._id)\"\n                >\n                  <td>{{ i + 1 }}</td>\n                  <td>{{ h.name }}</td>\n                  <td>{{ h.state }}</td>\n                  <td>{{ h.username }}</td>\n                  <td>{{ h.phone }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<loader *ngIf=\"isLoader\"></loader>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  ChangeDetectorRef,\n} from \"@angular/core\";\nimport { User } from \"src/app/_models/user\";\nimport { DashboardService } from \"src/app/dashboard/dashboard.service\";\nimport { Router } from \"@angular/router\";\nimport { ResponseMessage } from \"src/app/_models/response\";\nimport { Bill } from \"src/app/_models/bill\";\nimport { PaymentService } from \"src/app/payment/payment.service\";\nimport { ChartOptions } from \"chart.js\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"],\n})\nexport class DashboardComponent implements OnInit {\n  isLoader = false;\n\n  months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  public patientCount = 0;\n  public labAttendantCount = 0;\n  public doctorCount = 0;\n  public patients: User[] = [];\n  public apppointmentCount = 0;\n  public pharmacistsCount = 0;\n  public newPatients = [];\n  public outstandingPayments = [];\n  public firstTimePatients = []\n\n  page = 0;\n  limit = 10;\n  totalCount = 0;\n\n  billsList: Bill[] = [];\n\n  @ViewChild(\"myCanvas\", { static: false })\n  public canvas: ElementRef;\n  public context: CanvasRenderingContext2D;\n  public chartType: string = \"line\";\n\n  // Payment Chart Data\n  public paymentChartData: any[];\n  paymentChartCount = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  isPaymentChartLoaded = false;\n\n  // Appointment Chart Data\n  public appointmentChartData: any[];\n  appointmentChartCount = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  isAppointmentChartLoaded = false;\n\n  // patient Graph Data\n  public patientChartData: any[];\n  patientChartCount = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  isPatientChartLoaded = false;\n\n  public chartLabels: any[];\n\n  public chartColors: any[];\n  public chartColors1: any[];\n  public chartColors2: any[];\n\n  public chartOptions: ChartOptions;\n\n  constructor(\n    private dashboardService: DashboardService,\n    private paymentService: PaymentService,\n    private cdr: ChangeDetectorRef,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.chartLabels = this.months;\n\n    this.chartOptions = {\n      responsive: true,\n    };\n\n    this.patientChartData = [\n      {\n        data: this.patientChartCount,\n        label: \"Patients\",\n        fill: true,\n      },\n    ];\n\n    this.appointmentChartData = [\n      {\n        data: this.appointmentChartCount,\n        label: \"Appointments\",\n        fill: true,\n      },\n    ];\n\n    this.paymentChartData = [\n      {\n        data: this.paymentChartCount,\n        label: \"Payments\",\n        fill: true,\n      },\n    ];\n\n    this.getData();\n    this.getAllBills();\n    this.patientGraphData();\n    this.appointmentGraphData();\n    this.paymentsGraphData();\n    this.firstNewPatientOfTheYear()\n\n    this.chartColors = [\n      {\n        backgroundColor: \"rgb(250,125,180)\",\n        borderColor: \"105,159,177,1\",\n      },\n    ];\n    this.chartLabels = this.months;\n    this.chartColors1 = [\n      {\n        backgroundColor: \"rgb(99,216,252)\",\n        borderColor: \"153, 250, 166,1\",\n      },\n    ];\n    this.chartLabels = this.months;\n    this.chartColors2 = [\n      {\n        backgroundColor: \"rgb(153, 250, 166)\",\n        borderColor: \"105,159,177,1\",\n      },\n    ];\n  }\n\n  getData() {\n    this.isLoader = true;\n    this.dashboardService\n      .getHospitalDashboard()\n      .subscribe((res: ResponseMessage) => {\n        if (res.status == \"200\") {\n          this.patientCount = res.data.patient;\n          this.doctorCount = res.data.doctor;\n          this.labAttendantCount = res.data.labAttendant;\n          this.apppointmentCount = res.data.apppointment;\n          // this.patients = res.data.patients;\n          this.pharmacistsCount = res.data.pharmacistsCount;\n          this.isLoader = false;\n        }\n      });\n        // this.cdr.detectChanges();\n  }\n  gotoPatientProfile(id) {\n    this.router.navigate([`app/patient/profile/${id}`]);\n  }\n\n  // events\n  public chartClicked(e: any): void {\n    // console.log(e);\n  }\n\n  public chartHovered(e: any): void {\n    // console.log(e);\n  }\n\n  getAllBills() {\n    this.paymentService.getAll(this.page, this.limit).subscribe((res: any) => {\n      if (res.status === 200) {\n        this.billsList = res.data.doc;\n        this.totalCount = res.data.count;\n      } else {\n        this.billsList = [];\n      }\n    });\n\n    this.paymentService.outstanding(this.page, this.limit)\n      .subscribe((res: ResponseMessage) => {\n        if (res.status == \"200\") {\n          this.outstandingPayments = res.data.doc;\n        }\n      });\n      // this.cdr.detectChanges();\n  }\n\n  onClickPage(page = 0) {\n    this.page = page;\n    this.getAllBills();\n  }\n\n  onClick(id) {\n    this.router.navigate([\"/app/payment/invoice/\", id]);\n  }\n\n  getSubTotal(i) {\n    let subTotal: number = 0;\n    this.billsList[i].items.forEach((a) => (subTotal += a.price * a.quantity));\n    return subTotal;\n  }\n\n  applyDiscount(i) {\n    return (\n      this.getSubTotal(i) -\n      this.getSubTotal(i) * (this.billsList[i].discount / 100)\n    );\n  }\n\n  patientGraphData() {\n    this.isLoader = true;\n    this.isPatientChartLoaded = false;\n\n    this.dashboardService.getPatientGraphData().subscribe((res: any) => {\n      this.isLoader = false;\n      console.log(res)\n      if (+res.status === 200) {\n      console.log(res.data)\n        this.patients = res.data;\n        this.newPatients = res.data;\n        for (let i = 0; i < res.data.length; i++) {\n          this.patientChartCount[res.data[i]._id.month - 1] = res.data[i].count;\n        }\n        this.isPatientChartLoaded = true;\n      }\n    });\n  }\n\n  appointmentGraphData() {\n    this.isLoader = true;\n    this.isAppointmentChartLoaded = false;\n\n    this.dashboardService.getAppointmentGraphData().subscribe((res: any) => {\n      this.isLoader = false;\n      if (+res.status === 200) {\n        for (let i = 0; i < res.data.length; i++) {\n          this.appointmentChartCount[res.data[i]._id.month - 1] =\n            res.data[i].count;\n        }\n        this.isAppointmentChartLoaded = true;\n      }\n      // this.cdr.detectChanges();\n    });\n  }\n\n  paymentsGraphData() {\n    this.isLoader = true;\n    this.isPaymentChartLoaded = false;\n\n    this.dashboardService.getPaymentGraphData().subscribe((res: any) => {\n      this.isLoader = false;\n      if (+res.status === 200) {\n        for (let i = 0; i < res.data.length; i++) {\n          this.paymentChartCount[res.data[i]._id.month - 1] = res.data[i].total;\n        }\n        this.isPaymentChartLoaded = true;\n      }\n      // this.cdr.detectChanges();\n    });\n  }\n\n  firstNewPatientOfTheYear() {\n    this.dashboardService.getFirstTimePatients().subscribe((res: any) => {\n      this.isLoader = false;\n      console.log(res)\n      if (+res.status === 200) {\n        for (let i = 0; i < res.data.length; i++) {\n        //   this.paymentChartCount[res.data[i]._id.month - 1] = res.data[i].total;\n        // }\n        // this.isPaymentChartLoaded = true;\n      }\n      }\n      // this.cdr.detectChanges();\n    });\n  }\n  }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HospitalService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  post(hospital: User) {\n    return this.httpClient.post('api/hospitals', hospital);\n  }\n  get(page = 0, limit = 20, active = true) {\n    return this.httpClient.get(`api/hospitals?page=${page}&limit=${limit}&active=${active}`);\n  }\n  getById(id) {\n    return this.httpClient.get(`api/hospitals/${id}`);\n  }\n\n  putHospital(id, value) {\n    return this.httpClient.put(`api/hospitals/${id}`, value);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListComponent } from './list/list.component';\nimport { AddComponent } from './add/add.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      { path: '', component: ListComponent },\n      { path: 'dash', component: DashboardComponent },\n      { path: 'add', component: AddComponent },\n      { path: 'edit/:id', component: AddComponent },\n      { path: 'request/:id', component: AddComponent },\n      { path: ':id', component: ProfileComponent },\n      { path: 'profile/:id', component: ProfileComponent },\n    ]\n\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HospitalsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HospitalsRoutingModule } from './hospitals-routing.module';\nimport { ListComponent } from './list/list.component';\nimport { AddComponent } from './add/add.component';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { ProfileComponent } from './profile/profile.component';\nimport { NgxPermissionsModule } from 'ngx-permissions';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ChartsModule } from 'ng2-charts';\n\n\n\n@NgModule({\n  declarations: [ListComponent, AddComponent, ProfileComponent, DashboardComponent],\n  imports: [\n    CommonModule,\n    HospitalsRoutingModule,\n    SharedModule,\n    NgxPermissionsModule\n  ]\n})\nexport class HospitalsModule { }\n","<div class=\"row\">\n    <div class=\"col-md-4\"></div>\n    <div class=\"col-md-4\"></div>\n    <div class=\"col-md-4\">\n\n        <div class=\"float-right\">\n            <label (click)=\"clickActive()\" class=\"btn btn-info\">\n                <div class=\"custom-control custom-checkbox mr-sm-2\">\n                    <input type=\"checkbox\" class=\"custom-control-input\" [(ngModel)]=\"active\">\n                    <label class=\"custom-control-label\" for=\"checkbox1\"> {{active?  \"Active\": \"Active\"}} </label>\n                </div>\n            </label>\n\n        </div>\n    </div>\n</div>\n\n<div class=\"row\" *ngIf=\"!isLoader\">\n\n    <div *ngFor=\"let item of hospitals; let i = index\" class=\"col-md-4 col-sm-4\">\n\n\n        <div class=\"card\">\n\n            <div class=\"card-body \">\n                <div class=\"row\">\n                    <div class=\"col-md-4 col-sm-4 text-center\">\n                        <div class=\"user-img\">\n                            <a><img [src]=\"imageUrl(item.image)\" alt=\"user\" class=\"rounded-circle\"></a>\n                        </div>\n                    </div>\n                    <div class=\"col-md-8 col-sm-8\">\n                        <h5 class=\"card-title m-b-0\">{{item.name}}</h5> <small>{{item?.city +\", \" +item?.state}}\n                        </small>\n                        <p>\n                        <address>\n                          <i class=\"fas fa-map-marker text-muted\"></i> {{item.address}}, {{item.state}}\n                            <br />\n                            <br />\n                            <span class=\"fas fa-phone text-muted\">&nbsp;</span>{{item.phone}}\n                        </address>\n\n\n                    </div>\n                    <div class=\"col-md-12\">\n                        <hr>\n                        <button routerLink=\"/app/hospitals/{{item._id}}\" type=\"button\"\n                            class=\"btn btn-outline-success btn-block \" style=\"text-align: center;\">View Details\n                            <i class=\"fas fa-arrow-right \"></i> </button>\n                    </div>\n\n                </div>\n\n\n            </div>\n        </div>\n    </div>\n</div>\n<loader *ngIf=\"isLoader\"></loader>\n\n\n\n\n<!-- <div id=\"container\" *ngIf=\"!isLoader\">\n\n  <div id=\"card\" *ngFor=\"let item of hospitals; let i = index\" class=\"card\">\n      <div class=\"card-body \">\n        <div id=\"container\">\n          <div id=\"card\">\n          <div class=\"user-img\">\n            <a><img [src]=\"imageUrl(item.image)\" alt=\"user\" class=\"rounded-circle\"></a>\n        </div>\n        <div class=\"\">\n          <h5 class=\"card-title m-b-0\">{{item.name}}</h5> <small>{{item?.city +\", \" +item?.state}}\n          </small>\n          <p>\n          <address>\n           <i class=\"fas fa-map-marker text-muted\"></i> {{item.address}}, {{item.state}}\n            <br />\n            <br />\n            <span class=\"fas fa-phone text-muted\">&nbsp;</span>{{item.phone}}\n          </address>\n        </div>\n      </div>\n        </div>\n          <div>\n            <hr>\n            <button routerLink=\"/app/hospitals/{{item._id}}\" type=\"button\" class=\"btn btn-outline-success btn-block \"\n              style=\"text-align: center;\">View Details\n              <i class=\"fas fa-arrow-right \"></i> </button>\n          </div>\n    </div>\n  </div>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { HospitalService } from '../hospital.service';\nimport { User } from 'src/app/_models/user';\nimport { environment } from 'src/environments/environment';\nimport { ResponseMessage } from 'src/app/_models/response';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  isLoader = false;\n  hospitals: User[];\n  page = 0;\n  limit = 10;\n  active = true;\n  totalCount = 0;\n\n  constructor(private hospitalService: HospitalService) { }\n\n  ngOnInit() {\n    this.get();\n  }\n  clickActive() {\n    this.active = !this.active;\n    this.get();\n  }\n  get() {\n    this.isLoader = true;\n    this.hospitalService.get(this.page, this.limit, this.active)\n      .subscribe((res: ResponseMessage) => {\n        console.log(res)\n        if (res.status == '200') {\n          this.isLoader = false;\n          this.hospitals = res.data.docs as User[];\n          this.totalCount = res.data.c;\n\n          console.log(this.hospitals)\n\n        } else {\n          this.isLoader = false;\n          this.hospitals = [];\n          console.log('empty')\n\n        }\n\n      })\n  }\n  imageUrl(url) {\n    return environment.base_url + url\n  }\n}\n","<!-- Row -->\n<div class=\"row\" *ngIf=\"!isLoader\">\n    <!-- Column -->\n    <div class=\"col-lg-4 col-xlg-3 col-md-5\">\n        <div class=\"card\">\n            <div class=\"user-bg\"> <img class=\"img-responsive card-img\" alt=\"user\"\n                    [src]=\"hospital?.user.image | imageSrc\"> </div>\n            <div class=\"card-body\">\n                <!-- .row -->\n                <div class=\"row text-center m-t-10\">\n                    <div class=\"col-md-12\">\n                        <strong>Hospital Name</strong>\n                        <p>{{hospital?.user.name}}</p>\n                    </div>\n\n                </div>\n                <hr>\n                <!-- /.row -->\n                <!-- .row -->\n                <div class=\"row text-center m-t-10\">\n                    <div class=\"col-md-6 cold b-r\"><strong>Email ID</strong>\n                        <p>{{hospital?.user.email}}</p>\n                    </div>\n                    <div class=\"col-md-6 cold\"><strong>Hotline</strong>\n                        <p>{{hospital?.user.phone}}</p>\n                    </div>\n                </div>\n                <!-- /.row -->\n                <hr>\n                <!-- .row -->\n                <div class=\"row text-center m-t-10\">\n                    <div class=\"col-md-12\"><strong>Address</strong>\n                        <p *ngIf=\"hospital\"> {{hospital?.user | address}}\n                        </p>\n\n                    </div>\n                </div>\n                <hr>\n                <button *ngxPermissionsOnly=\"['admin']\" type=\"button\" class=\"btn  btn-block \"\n                    [ngClass]=\"hospital?.user?.active ? 'btn-outline-primary' : 'btn-outline-success'\"\n                    (click)=\"markAsActive()\" style=\"text-align: center;\"> Mark as\n                    {{hospital?.user?.active ? 'Inactive' : 'Active'}}\n                </button>\n            </div>\n        </div>\n    </div>\n    <!-- Column -->\n    <!-- Column -->\n    <div class=\"col-lg-8 col-xlg-9 col-md-7\">\n        <div class=\"card\">\n\n            <!-- Nav tabs -->\n            <div style=\"padding-top: 10px; padding-right: 10px ;\">\n                <ul class=\"nav nav-tabs profile-tab\" role=\"tablist\">\n                    <li class=\"nav-item\"> <a class=\"nav-link\" [ngClass]=\"{active: tab === 1}\" data-toggle=\"tab\"\n                            href=\"javascript::void(0)\" (click)=\"onclickTab(1)\" role=\"tab\">About</a> </li>\n                    <li class=\"nav-item\"> <a class=\"nav-link\" [ngClass]=\"{active: tab === 2}\" data-toggle=\"tab\"\n                            href=\"javascript::void(0)\" (click)=\"goToEdit()\" role=\"tab\">Update Details</a> </li>\n                    <li *ngIf=\"authService.currentUserValue._id !== hospital.user._id\" class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"javascript::void(0)\" (click)=\"chat()\"> <i\n                                class=\"fa fa-comment-alt\"></i> Message</a>\n                    </li>\n                </ul>\n\n\n\n            </div>\n            <!-- Tab panes -->\n            <div class=\"tab-content\">\n\n                <!--second tab-->\n                <div class=\"tab-pane \" [ngClass]=\"{active: tab === 1}\" id=\"profile\" role=\"tabpanel\">\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-md-3 col-6 mb-10 b-r\"> <strong>Hospital ID</strong>\n\n                                <p class=\"text-muted\">{{hospital?.user.username}}</p>\n                            </div>\n                            <div class=\"col-md-3 col-6 mb-10 b-r h-b\"> <strong>Hotline</strong>\n\n                                <p class=\"text-muted\">{{hospital?.user.phone}}</p>\n                            </div>\n                            <div class=\"col-md-3 col-6 b-r\"> <strong>City</strong>\n\n                                <p class=\"text-muted\">{{hospital?.user.city}}</p>\n                            </div>\n\n                            <div class=\"col-md-3 col-6\"> <strong>State</strong>\n\n                                <p class=\"text-muted\">{{hospital?.user.state}}</p>\n                            </div>\n                        </div>\n                        <hr>\n                        <div class=\"row\">\n                            <div class=\"col-md-3 col-6 b-r\"> <strong>Director Name</strong>\n\n                                <p class=\"text-muted\">{{hospital?.directorName}}</p>\n                            </div>\n                            <div class=\"col-md-3 col-6 b-r h-b\"> <strong>Director Phone</strong>\n\n                                <p class=\"text-muted\">{{hospital?.directorPhone}}</p>\n                            </div>\n\n                        </div>\n                        <hr>\n                        <h3>Biography</h3>\n                        <p>\n                            {{hospital?.description}}\n                        </p>\n                        <h4 class=\"font-medium m-t-30\">Status: &nbsp; <span class=\"label \"\n                                [ngClass]=\"hospital?.user.active ? 'label-success' : 'label-primary'\"\n                                style=\"padding: 10px;\">\n                                {{hospital?.user.active ? 'Active' : 'Inactive'}}</span></h4>\n\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n    <!-- Column -->\n</div>\n<loader *ngIf=\"isLoader\"></loader>\n<!-- Row -->\n","import { Component, OnInit } from '@angular/core';\nimport { HospitalService } from '../hospital.service';\nimport { ResponseMessage } from 'src/app/_models/response';\nimport { User } from 'src/app/_models/user';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/auth.service';\nimport { NotifyService } from 'src/app/shared/notify.service';\nimport { ChatService } from 'src/app/inbox/chat.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  isLoader = false;\n  tab = 1;\n  hospital;\n  constructor(private hospitalService: HospitalService,\n    private router: Router,\n    public authService: AuthService,\n    private chatService: ChatService,\n    private activatedRoute: ActivatedRoute,\n\n    private notifyService: NotifyService\n  ) { }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      console.log(params['id'])\n      if (params['id']) {\n        this.get(params['id']);\n      }\n    });\n  }\n\n  onclickTab(tab) {\n    this.tab = tab;\n  }\n\n  get(id) {\n    this.isLoader = true;\n    this.hospitalService.getById(id).subscribe((res: any) => {\n      console.log(res);\n      if (res.status == '200') {\n        this.isLoader = false;\n        this.hospital = res.data;\n\n      } else {\n        this.router.navigate(['app/hospitals']);\n      }\n\n    })\n  }\n\n  chat() {\n    this.chatService.addfriend(this.hospital.user._id).subscribe((res: ResponseMessage) => {\n      if (+res.status === 200) {\n        this.router.navigate([`app/inbox/${this.hospital.user._id}`]);\n      }\n    })\n  }\n\n  get ImageSrc() { return environment.base_url + this.hospital.user.image; }\n  markAsActive() {\n\n    this.authService.toggleactive(this.hospital.user._id).subscribe((res: ResponseMessage) => {\n      if (+res.status === 200) {\n        this.hospital.user.active = !this.hospital.user.active;\n        this.notifyService.success(res.data.msg);\n      }\n    });\n  }\n  // [routerLink]=\"['/app/doctor/edit/', doctor._id]\"\n  goToEdit() {\n    // this.router.navigate(['/app/hospitals/edit/', this.hospital._id], { queryParams: { returnUrl: this.router.url } });\n    this.router.navigate(['/app/hospitals/edit/', this.hospital.user._id]);\n\n  }\n}\n"],"sourceRoot":"webpack:///"}