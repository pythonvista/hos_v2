{"version":3,"sources":["./src/app/shared/pagination/pagination.component.html","./src/app/shared/pagination/pagination.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yGAII,iPACmH,YADzB;;wBAAe;MACvG;;wBAAiC;MADnC,gqCACmH,mDAAjD,oBAAsB,EAAtC,oBAAe,EADvB,mBAA4B,YAClC,iBAAa,EADyC,mBAAe,OAAlC,mBAAkB,QAAzF,YACmH,EAAjD,SAAsB,EAAtC,SAAe,EADvB,SAA4B,EAClC,SAAa,EADyC,SAAe,EAAlC,SAAkB;yGAH7F,wNAAiG,KAE/F,qLAA+D,KAC7D,4YACmH,IAKrH,8LAAuE,KACrE,6KAAuD,kFAAK,MAC5D;;;;;wBAEsG;MAA7C;;wBAAwB;MAAC;;wBAAmB;MAFrG,kuCAEsG,IACpG,wyBAAuB,uFAAW,MAClC,wyBAAuB,uFAAW,MAClC,wyBAAuB,uFAAW,MAClC,wyBAAuB,uFAAW,mDAdpB,oCAAyB,SAAzC,YACmH,EADnG,SAAyB,GAUA,0BAAe,EAA0B,mBAAmB,QAFrG,aAEsG,EAA7D,SAAe,EAA0B,SAAmB,GAC3F,mBAAc,EAAtB,aAAuB,EAAf,gCAAc,EAAtB,aAAuB,EAAf,UAAc,GACd,mBAAc,EAAtB,aAAuB,EAAf,gCAAc,EAAtB,aAAuB,EAAf,UAAc,GACd,mBAAc,EAAtB,aAAuB,EAAf,gCAAc,EAAtB,aAAuB,EAAf,UAAc,GACd,mBAAc,EAAtB,aAAuB,EAAf,gCAAc,EAAtB,aAAuB,EAAf,UAAc,2BANxB,qtBAEsG;;;;;;;;;;;;;;;;ACd1G;AAAA;AAAA;AAAA,kCAAkC;AAC6C;AAOxE,MAAM,mBAAmB;IAM9B;QALU,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QACnC,SAAI,GAAW,CAAC,CAAC;QACjB,UAAK,GAAW,EAAE,CAAC;QACnB,cAAS,GAAW,CAAC,CAAC;IAEf,CAAC;IAEjB,QAAQ;QACN,4BAA4B;QAC5B,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE;YACjB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;SACf;IACH,CAAC;IAED,UAAU,CAAC,IAAY;QACrB,uBAAuB;QACvB,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,CAAC,EAAE;YACZ,IAAI,GAAG,CAAC,CAAC;SACV;aAAM,IAAI,IAAI,GAAG,OAAO,EAAE;YACzB,IAAI,GAAG,OAAO,CAAC;SAChB;QAED,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,WAAW;QACT,0DAA0D;QAC1D,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,0DAA0D;IAC1D,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC;CACF","file":"default~docter-docter-module-ngfactory~frontDeskOfficer-front-desk-officer-module-ngfactory~lab-atte~7ac24407-es2015.js","sourcesContent":["<!-- Updated pagination.component.html -->\r\n<div class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-3 sm:space-y-0\">\r\n  <!-- Bootstrap pagination with better styling -->\r\n  <div class=\"flex items-center justify-center sm:justify-start\">\r\n    <ngb-pagination *ngIf=\"totalDocs > limit\" [collectionSize]=\"totalDocs\" [pageSize]=\"limit\" [(page)]=\"page\"\r\n      (pageChange)=\"pageChange($event)\" [maxSize]=\"5\" [rotate]=\"true\" [boundaryLinks]=\"true\" class=\"pagination-custom\">\r\n    </ngb-pagination>\r\n  </div>\r\n\r\n  <!-- Page size selector -->\r\n  <div class=\"flex items-center justify-center sm:justify-end space-x-2\">\r\n    <label class=\"text-sm text-gray-700 whitespace-nowrap\">Show:</label>\r\n    <select\r\n      class=\"form-select form-select-sm border-gray-300 rounded-md text-sm focus:border-blue-500 focus:ring-blue-500\"\r\n      style=\"width: auto; min-width: 120px;\" name=\"pageSize\" (change)=\"limitChange()\" [(ngModel)]=\"limit\">\r\n      <option [ngValue]=\"10\">10 per page</option>\r\n      <option [ngValue]=\"20\">20 per page</option>\r\n      <option [ngValue]=\"25\">25 per page</option>\r\n      <option [ngValue]=\"50\">50 per page</option>\r\n    </select>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  /* Custom pagination styles */\r\n  .pagination-custom ::ng-deep .pagination {\r\n    margin: 0;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 0.25rem;\r\n  }\r\n\r\n  .pagination-custom ::ng-deep .page-item {\r\n    margin: 0;\r\n  }\r\n\r\n  .pagination-custom ::ng-deep .page-link {\r\n    border-radius: 0.375rem;\r\n    border: 1px solid #d1d5db;\r\n    color: #374151;\r\n    padding: 0.375rem 0.75rem;\r\n    font-size: 0.875rem;\r\n    transition: all 0.15s ease;\r\n    margin: 0 0.125rem;\r\n    min-width: 2.5rem;\r\n    text-align: center;\r\n  }\r\n\r\n  .pagination-custom ::ng-deep .page-item.active .page-link {\r\n    background-color: #3b82f6;\r\n    border-color: #3b82f6;\r\n    color: white;\r\n  }\r\n\r\n  .pagination-custom ::ng-deep .page-link:hover {\r\n    background-color: #f3f4f6;\r\n    border-color: #9ca3af;\r\n    color: #1f2937;\r\n  }\r\n\r\n  .pagination-custom ::ng-deep .page-item.disabled .page-link {\r\n    background-color: #f9fafb;\r\n    border-color: #e5e7eb;\r\n    color: #9ca3af;\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  .pagination-custom ::ng-deep .page-item.disabled .page-link:hover {\r\n    background-color: #f9fafb;\r\n    border-color: #e5e7eb;\r\n    color: #9ca3af;\r\n  }\r\n\r\n  /* Responsive adjustments */\r\n  @media (max-width: 640px) {\r\n    .pagination-custom ::ng-deep .pagination {\r\n      justify-content: center;\r\n    }\r\n\r\n    .pagination-custom ::ng-deep .page-link {\r\n      padding: 0.25rem 0.5rem;\r\n      font-size: 0.75rem;\r\n      min-width: 2rem;\r\n    }\r\n  }\r\n\r\n</style>\r\n","// Updated pagination.component.ts\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  styleUrls: ['./pagination.component.css']\r\n})\r\nexport class PaginationComponent implements OnInit {\r\n  @Output() onPageChange = new EventEmitter();\r\n  @Input() page: number = 1;\r\n  @Input() limit: number = 10;\r\n  @Input() totalDocs: number = 0;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    // Ensure page is at least 1\r\n    if (this.page < 1) {\r\n      this.page = 1;\r\n    }\r\n  }\r\n\r\n  pageChange(page: number) {\r\n    // Validate page number\r\n    const maxPage = Math.ceil(this.totalDocs / this.limit);\r\n    if (page < 1) {\r\n      page = 1;\r\n    } else if (page > maxPage) {\r\n      page = maxPage;\r\n    }\r\n    \r\n    this.page = page;\r\n    this.onPageChange.emit({ page: this.page, limit: this.limit });\r\n  }\r\n\r\n  limitChange() {\r\n    // Reset to first page when changing limit to avoid issues\r\n    this.page = 1;\r\n    this.onPageChange.emit({ page: this.page, limit: this.limit });\r\n  }\r\n\r\n  // Helper method to get total pages (useful for debugging)\r\n  get totalPages(): number {\r\n    return Math.ceil(this.totalDocs / this.limit);\r\n  }\r\n}"],"sourceRoot":"webpack:///"}