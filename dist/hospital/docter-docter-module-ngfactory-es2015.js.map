{"version":3,"sources":["./src/app/docter/add/add.component.html","./src/app/docter/add/add.component.ts","./src/app/docter/dashboard/dashboard.component.html","./src/app/docter/dashboard/dashboard.component.ts","./src/app/docter/docter-routing.module.ts","./src/app/docter/docter.module.ts","./src/app/docter/doctor.service.ts","./src/app/docter/list/list.component.html","./src/app/docter/list/list.component.ts","./src/app/docter/profile/profile.component.html","./src/app/docter/profile/profile.component.ts"],"names":[],"mappings":"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","file":"docter-docter-module-ngfactory-es2015.js","sourcesContent":["<div class=\"card\">\n    <div class=\"card-body\" *ngIf=\"!isLoader\">\n        <h5 class=\"card-title\">Basic Information</h5>\n        <div class=\"form-material form-horizontal\" [formGroup]=\"form\">\n            <div class=\"\">\n                <div class=\"col-md-4 pt-3 float-right\">\n                    <div class=\"card\">\n                        <input type=\"file\" (change)=\"uploader.uploadAll()\" ng2FileSelect [uploader]=\"uploader\" #inp\n                            style=\"display: none;\" />\n                        <div class=\"card-header text-center\">\n                            <div class=\"edit-img\">\n                                <img *ngIf=\"!f.image.value\" [src]=\"url\" alt=\"\" class=\"rounded-circle\">\n                                <img *ngIf=\"f.image.value\" [src]=\"f.image.value|imageSrc\" alt=\"\" class=\"rounded-circle\">\n                            </div>\n                        </div>\n                        <div class=\"card-body\">\n                            <button (click)=\"inputClick()\" class=\"btn btn-primary btn-block pt-2\"\n                                style=\"background: #50dff9; border: none;\">\n                                <label>\n                                    Upload\n                                </label>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group mt-4\">\n                    <label class=\"col-md-12\" for=\"example-text\">Name</label>\n                    <div class=\"col-md-12\">\n                        <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"enter your name\">\n                        <small *ngIf=\"isFormSubmitted && f.name.errors && f.name.errors.required\" class=\"text-danger\">\n                            Name is Required\n                        </small>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label class=\"col-md-12\"> Cadre</label>\n                    <div class=\"col-md-12\">\n                        <select formControlName=\"cadre\" class=\"form-control\">\n                            <option value=\"\">Select Cadre</option>\n                            <option *ngFor=\"let cadre of cadres\" [value]=\"cadre\">{{cadre}}</option>\n\n                        </select>\n                        <small *ngIf=\"isFormSubmitted && f.cadre.errors && f.cadre.errors.required\" class=\"text-danger\">\n                            Cadre is Required\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-group\" *ngIf=\"isDept\">\n                    <label class=\"col-md-12\"> Department</label>\n                    <div class=\"col-md-12\">\n\n                        <select formControlName=\"department\" class=\"form-control\">\n\n                            <option value=\"\">Select Department</option>\n\n                            <option *ngFor=\"let d of departments\" [value]=\"d\">{{d}}</option>\n\n\n\n                        </select>\n                        <!-- Department Validation -->\n                        <small *ngIf=\"isFormSubmitted && f.department.errors && f.department.errors.required\"\n                            class=\"text-danger\">\n                            Department is Required\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-group\" *ngIf=\"isSp\">\n                    <label class=\"col-md-12\"> Specialty</label>\n                    <div class=\"col-md-12\">\n\n                        <select formControlName=\"specialty\" class=\"form-control\">\n\n                            <option value=\"\">Select Specialty</option>\n\n                            <option *ngFor=\"let s of specialties\" [value]=\"s\">{{s}}</option>\n\n\n\n                        </select>\n                        <!-- Department Validation -->\n                        <small *ngIf=\"isFormSubmitted && f.specialty.errors && f.specialty.errors.required\"\n                            class=\"text-danger\">\n                            Specialty is Required\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"col-md-12\" for=\"bdate\">Date of Birth\n                    </label>\n                    <div class=\"input-group-append\">\n                        <input class=\"form-control pl-3\" placeholder=\"dd/mm/yyyy\" [minDate]=\"minDate\"\n                            [maxDate]=\"maxDate\" name=\"dp\" formControlName=\"dob\" ngbDatepicker #d=\"ngbDatepicker\"\n                            (blur)=\"d.close()\">\n                        <button class=\"btn btn-outline-secondary fa fa-calendar\" (click)=\"d.toggle()\"\n                            type=\"button\"></button>\n                        <!-- Date of Birth Validation -->\n\n                    </div>\n                    <small *ngIf=\"isFormSubmitted && f.dob.errors && f.dob.errors.required\" class=\" pl-3 text-danger\">\n                        Date of Birth is Required\n                    </small>\n                </div>\n\n                <div class=\"form-group\">\n                    <label class=\"col-md-12\" for=\"example-text\">Gender</label>\n                    <div class=\"col-md-12\">\n                        <select formControlName=\"gender\" class=\"form-control\">\n                            <option value=\"\">Select Gender</option>\n                            <option value=\"Male\">Male</option>\n                            <option value=\"Female\">Female</option>\n                        </select>\n                        <!-- Gender Validation -->\n                        <small *ngIf=\"isFormSubmitted && f.gender.errors && f.gender.errors.required\"\n                            class=\"text-danger\">\n                            Gender is required\n                        </small>\n                    </div>\n                </div>\n            </div>\n            <!-- Address -->\n            <div class=\"form-group\">\n                <label class=\"col-md-12\" for=\"example-text\">Address\n                </label>\n                <div class=\"col-md-12\">\n                    <input type=\"text\" formControlName=\"address\" class=\"form-control\" placeholder=\"enter your address\">\n                    <!-- Address Validation -->\n                    <small *ngIf=\"isFormSubmitted && f.address.errors && f.address.errors.required\" class=\"text-danger\">\n                        Address is Required\n                    </small>\n                </div>\n            </div>\n\n            <!-- City -->\n            <div class=\"form-group\">\n                <label class=\"col-md-12\" for=\"example-text\">City\n                </label>\n                <div class=\"col-md-12\">\n                    <input type=\"text\" formControlName=\"city\" class=\"form-control\" placeholder=\"enter your city\">\n                    <!-- City Validation -->\n                    <small *ngIf=\"isFormSubmitted && f.city.errors && f.city.errors.required\" class=\"text-danger\">\n                        City is Required\n                    </small>\n                </div>\n            </div>\n\n            <!-- State -->\n            <div class=\"form-group\">\n                <label class=\"col-md-12\">State</label>\n                <div class=\"col-md-12\">\n                    <select formControlName=\"state\" class=\"form-control\">\n                        <option value=\"\">Select State</option>\n                        <option *ngFor=\"let st of states\" [value]=\"st\">{{st}}</option>\n                    </select>\n                    <!-- State Validation -->\n                    <small *ngIf=\"isFormSubmitted && f.state.errors && f.state.errors.required\" class=\"text-danger\">\n                        State is Required\n                    </small>\n                </div>\n            </div>\n\n            <!-- Email -->\n            <div class=\"form-group\">\n                <label class=\"col-md-12\">Email\n                </label>\n                <div class=\"col-md-12\">\n                    <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"enter your email\">\n                    <!-- Email Validation -->\n                    <small *ngIf=\"isFormSubmitted && f.email.errors && f.email.errors.required\" class=\"text-danger\">\n                        Email is Required\n                    </small>\n                    <small *ngIf=\"isFormSubmitted && f.email.errors && f.email.errors.email\" class=\"text-danger\">\n                        Enter a valid Email\n                    </small>\n                </div>\n            </div>\n\n            <!-- Phone Number -->\n            <div class=\"form-group\">\n                <label class=\"col-md-12\" for=\"example-phone\">Phone\n                </label>\n                <div class=\"col-md-12\">\n                    <input type=\"text\" formControlName=\"phone\" num class=\"form-control\" placeholder=\"enter your phone\"\n                        data-mask=\"(999) 999-9999\">\n                    <!-- Phone Number Validation -->\n                    <small *ngIf=\"isFormSubmitted && f.phone.errors && f.phone.errors.required\" class=\"text-danger\">\n                        Phone Number is Required\n                    </small>\n                    <small *ngIf=\"isFormSubmitted && f.phone.errors && f.phone.errors?.maxlength\" class=\"text-danger\">\n                        Phone Number's length is exceeded\n                    </small>\n                </div>\n            </div>\n\n            <!-- Password -->\n            <div *ngIf=\"!isEdit\" class=\"form-group\">\n                <label class=\"col-md-12\" for=\"pwd\">Password\n                </label>\n                <div class=\"col-md-12\">\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\"\n                        placeholder=\"enter your password\">\n                    <!-- Password Valiation -->\n                    <small *ngIf=\"isFormSubmitted && f.password.errors && f.password.errors.required\"\n                        class=\"text-danger\">\n                        Password is required\n                    </small>\n                </div>\n            </div>\n\n\n            <!-- Description -->\n            <div class=\"form-group\">\n                <label class=\"col-md-12\">Description</label>\n                <div class=\"col-md-12\">\n                    <textarea formControlName=\"description\" class=\"form-control\" rows=\"3\"></textarea>\n                    <!-- Description Validation -->\n                    <small *ngIf=\"isFormSubmitted && f.description.errors && f.description.errors.required\"\n                        class=\"text-danger\">\n                        Description is required\n                    </small>\n                </div>\n            </div>\n            <div class=\"text-right\">\n                <button type=\"button\" [routerLink]=\"['/app/doctor']\"\n                    class=\"btn btn-dark waves-effect waves-light\">Cancel</button>\n                <button type=\"submit\" (click)=\"onClickSave()\"\n                    class=\"btn btn-info waves-effect waves-light m-l-10\">Submit</button>\n            </div>\n\n        </div>\n    </div>\n    <loader *ngIf=\"isLoader\"></loader>\n\n    <!-- Update Password -->\n    <div *ngxPermissionsOnly=\"['doctor']\" class=\"modal-body\">\n        <h5 class=\"card-title\">Password & Security</h5>\n        <form [formGroup]=\"passwordForm\" class=\"form-horizontal form-material\">\n            <div class=\"form-group\">\n                <!-- Old Password -->\n                <div class=\"col-md-12 m-b-20\">\n                    <label class=\"col-md-12\" for=\"example-text\">Current Password</label>\n                    <input formControlName=\"password\" type=\"password\" class=\"form-control\"\n                        placeholder=\"Current Password\">\n                    <app-errors [form_control]=\"f2.password\" [isSubmitted]=\"isPasswordFromSubmit\"></app-errors>\n                </div>\n                <!-- New Password -->\n                <div class=\"col-md-12 m-b-20\">\n                    <label class=\"col-md-12\" for=\"example-text\">New Password</label>\n                    <input formControlName=\"newPassword\" type=\"password\" class=\"form-control\"\n                        placeholder=\"New Password\">\n                    <app-errors [form_control]=\"f2.newPassword\" [isSubmitted]=\"isPasswordFromSubmit\"></app-errors>\n                </div>\n                <!-- Confirm Password -->\n                <div class=\"col-md-12 m-b-20\">\n                    <label class=\"col-md-12\" for=\"example-text\">Confirm New Password\n                    </label>\n                    <input formControlName=\"confirmNewPassword\" type=\"password\" class=\"form-control\"\n                        placeholder=\"Confirm New Password\">\n                    <app-errors [form_control]=\"f2.confirmNewPassword\" [isSubmitted]=\"isPasswordFromSubmit\">\n                    </app-errors>\n                </div>\n            </div>\n        </form>\n        <div class=\"modal-footer\">\n            <a (click)=\"onSubmitPasswordForm()\" class=\"btn btn-info text-white waves-effect\">Change Password</a>\n        </div>\n    </div>\n</div>","import { Component, OnInit, createPlatformFactory, ElementRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport { DoctorService } from '../doctor.service';\nimport { ResponseMessage } from 'src/app/_models/response';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NotifierService } from 'angular-notifier';\nimport { Doctor } from 'src/app/_models/doctor';\nimport { AuthService } from 'src/app/auth.service';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { states } from 'src/app/_constants/states';\nimport { FileUploader } from 'ng2-file-upload';\nimport Swal from 'sweetalert2';\nimport { ConfirmPasswordValidator } from 'src/app/_helpers/confirm-password';\n\n\n/**\n * Component Add Doctor\n */\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\n\nexport class AddComponent implements OnInit {\n  isLoader = false;\n\n  public uploader: FileUploader = new FileUploader({ url: `${environment.base_url}api/upload` });\n\n  cadres = ['House officer', 'Resident', 'Senior Resident', 'Consultant', 'Medical officer', 'General practitioner',];\n  departments = ['Surgery', 'Internal Medicine',\n    'Obstetrics and Gynaecology', 'Paediatrics',\n    'Dentistry', 'Community Medicine', 'Family Medicine',\n    'Psychiatry', 'Accident and emergency doctors', 'Geriatrics',\n    'Hematology', 'Microbiology', 'Chemical pathology', 'Anatomic pathology',\n    'Physiotherapy', 'Nutrition and dietetics'];\n  specialties = [];\n  form: FormGroup;\n\n  isPasswordFromSubmit = false;\n  passwordForm: FormGroup;\n\n  isFormSubmitted: boolean = false;\n  editDoctor: Doctor = null;\n  doctorId: any = null;\n  isEdit: boolean = false;\n  url: string = `${environment.base_url}images/user.jpg`;\n  todayDate = new Date(Date.now());\n  minDate: NgbDateStruct = { year: this.todayDate.getFullYear() - 100, month: 1, day: 1 };\n  maxDate: NgbDateStruct = { year: this.todayDate.getFullYear(), month: this.todayDate.getMonth(), day: this.todayDate.getDate() };\n\n  states = states;\n  returnUrl\n  @ViewChild('inp', { static: false }) inp: ElementRef;\n\n  constructor(private formBuilder: FormBuilder,\n    private formBuilder2: FormBuilder,\n\n    private doctorService: DoctorService,\n    private userService: AuthService,\n    private notifier: NotifierService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,) { }\n\n  ngOnInit() {\n    this.returnUrl = this.activatedRoute.snapshot.queryParams['returnUrl'] || 'app/doctor';\n    this.activatedRoute.params.subscribe(params => {\n      this.doctorId = (params['id']);\n      if (this.doctorId) {\n        this.getDoctor(this.doctorId);\n        this.isEdit = true;\n      }\n    });\n\n    this.create();\n    this.createPasswordForm();\n    this.uploader.onAfterAddingFile = (file) => {\n      if (this.uploader.queue.length > 1) {\n        this.uploader.removeFromQueue(this.uploader.queue[0]);\n      }\n      file.onSuccess = (res: any) => {\n        this.f.image.patchValue(JSON.parse(res).url);\n      };\n    };\n  }\n\n\n  public showNotification(type: string, message: string): void {\n    this.notifier.notify(type, message);\n  }\n\n  create() {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      cadre: ['', Validators.required],\n      department: [''],\n      specialty: [''],\n      description: ['', Validators.required],\n      dob: ['', Validators.required],\n      gender: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      address: ['', Validators.required],\n      image: [''],\n      city: ['', Validators.required],\n      state: ['', Validators.required],\n      phone: ['', [Validators.required, Validators.maxLength(15)]],\n      role: ['doctor']\n    });\n\n\n\n    if (this.editDoctor != null) {\n      this.form.setValue({ name: this.editDoctor.user.name });\n    }\n  }\n\n  get f() { return this.form.controls; }\n  get isDept() {\n    let v = this.f.cadre.value;\n    const isDpt = (v != this.cadres[0] && v != this.cadres[4] && v != this.cadres[5]);\n    if (isDpt) {\n      this.f.department.setValidators([Validators.required])\n    } else {\n      this.f.department.clearValidators();\n    }\n    this.f.department.updateValueAndValidity();\n    return isDpt;\n  }\n  get isSp() {\n    let v = this.f.cadre.value;\n    let isS = (v != 'House officer' && v != 'Medical officer' && v != 'General practitioner' && v !== 'Resident');\n    if (!isS) {\n      this.f.specialty.clearValidators();\n      this.f.specialty.updateValueAndValidity();\n    } else {\n      if (this.f.department.value == 'Surgery') {\n        this.specialties = [\n          'General surgery',\n          'Urology',\n          'Burns and plastic unit',\n          'Neurosurgery',\n          'Orthopedics',\n          'Cardiothoracic',\n          'ENT surgery',\n          'Ophthalmology',\n        ]\n      } else if (this.f.department.value == 'Internal Medicine') {\n\n        this.specialties = [\n          'Nephrology',\n          'Cardiology',\n          'Chest',\n          'Dermatology',\n          'Oncology',\n          'Neurology',\n          'Gastrointestinal unit( G.I.T.)',\n          'Rheumatology',\n          'Infectious disease',\n\n        ];\n      } else if (this.f.department.value == 'Paediatrics') {\n        this.specialties = [\n          'Nephrology',\n          'Cardiology',\n          'Neonatologist',\n          'Infectious Disease',\n          'Chest',\n          'Hematology',\n          'Neurology',\n\n        ];\n      } else {\n        this.f.specialty.clearValidators();\n        this.f.specialty.updateValueAndValidity();\n\n        return false;\n      }\n\n      this.f.specialty.setValidators([Validators.required]);\n      this.f.specialty.updateValueAndValidity();\n\n    }\n    return isS;\n  }\n  onClickSave() {\n    this.isFormSubmitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    if (this.doctorId) {\n      this.updateUser();\n      return;\n    }\n\n    this.doctorService.post(this.form.value).subscribe((res: ResponseMessage) => {\n      if (res.status == '200') {\n        // navigate to list page\n        this.showNotification('success', 'Doctor is successfully added.');\n        this.router.navigate(['app/doctor']);\n      }\n    });\n  }\n\n  inputClick() {\n    this.inp.nativeElement.click();\n  }\n\n\n  getDoctor(id) {\n    this.isLoader = true;\n    this.doctorService.getById(id).subscribe((res: any) => {\n      if (+res.status === 200) {\n        this.editDoctor = res.data;\n        this.form.patchValue({\n          name: this.editDoctor.user.name,\n          cadre: this.editDoctor.cadre,\n          department: this.editDoctor.department,\n          specialty: this.editDoctor.specialty,\n          description: this.editDoctor.description,\n          dob: new Date(this.editDoctor.dob),\n          gender: this.editDoctor.gender,\n          email: this.editDoctor.user.email,\n          password: this.editDoctor.user.password,\n          address: this.editDoctor.user.address,\n          city: this.editDoctor.user.city,\n          state: this.editDoctor.user.state,\n          phone: this.editDoctor.user.phone,\n          image: this.editDoctor.user.image,\n\n        });\n        this.isLoader = false;\n      } else {\n        this.editDoctor = null;\n        this.isLoader = false;\n      }\n    })\n  }\n\n  // Updates User\n  updateUser() {\n    let user = this.editDoctor.user;\n\n    user.address = this.f['address'].value;\n    user.city = this.f['city'].value;\n    user.email = this.f['email'].value;\n    user.image = this.f['image'].value || this.editDoctor.user.image;\n    user.name = this.f['name'].value;\n    user.phone = this.f['phone'].value;\n    user.state = this.f['state'].value;\n\n    this.userService.updateUser(user._id, user).subscribe((res: any) => {\n      if (res.status === 200) {\n        this.updateDoctor();\n      }\n      else {\n        this.showNotification('error', 'An Error Occured');\n        this.router.navigate(['app/doctor']);\n      }\n    })\n  }\n\n  // Updates Doctor\n  updateDoctor() {\n    this.doctorService.upateDoctor(this.doctorId, this.form.value).subscribe((res: any) => {\n      if (res.status === 200) {\n        // navigate to list page\n        this.showNotification('success', 'Doctor Updated Successfully.');\n        this.router.navigate([this.returnUrl]);\n      }\n      else {\n        this.showNotification('error', 'An Error Occured');\n        this.router.navigate([this.returnUrl]);\n      }\n    })\n  }\n\n\n  // password Section Form\n  createPasswordForm() {\n    this.passwordForm = this.formBuilder2.group({\n      password: ['', [Validators.required]],\n      newPassword: ['', [Validators.required]],\n      confirmNewPassword: ['', [Validators.required]],\n    }, {\n      validator: ConfirmPasswordValidator('newPassword', 'confirmNewPassword')\n    });\n  }\n\n  get f2() { return this.passwordForm.controls; }\n\n  // password Section Submit Button Actions\n  onSubmitPasswordForm() {\n    this.isPasswordFromSubmit = true;\n    if (this.passwordForm.invalid) {\n      return;\n    }\n\n    this.userService.updatePassword(this.passwordForm.value).subscribe((res: any) => {\n      if (+res.status === 200) {\n        Swal.fire('Password Updated!', '', 'success');\n        this.userService.logout();\n        this.router.navigate(['/login']);\n        this.passwordForm.reset();\n        this.isPasswordFromSubmit = false;\n      } else {\n        Swal.fire({ icon: 'error', title: 'Error!', text: 'Password Updation Failed', })\n      }\n    }, err => {\n      Swal.fire({ icon: 'error', title: 'Error!', text: 'Password  Invalid', })\n    });\n  }\n\n}\n","<div *ngIf=\"!isLoader\">\n    <div class=\"row\">\n        <!-- Column -->\n        <div class=\"col-lg-3 col-md-6\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <div class=\"d-flex no-block\">\n                        <div class=\"round align-self-center round-success\"><i class=\"fa fa-flask\"></i></div>\n                        <div class=\"m-l-10 align-self-center\">\n                            <h3 class=\"m-b-0\">{{ticketCount}}</h3>\n                            <h5 class=\"text-muted m-b-0\">Tickets</h5>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- Column -->\n        <!-- Column -->\n        <div class=\"col-lg-3 col-md-6\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <div class=\"d-flex no-block\">\n                        <div class=\"round align-self-center round-info\"><i class=\"fa fa-calendar\"></i></div>\n                        <div class=\"m-l-10 align-self-center\">\n                            <h3 class=\"m-b-0\">{{scheduledCount}}</h3>\n                            <h5 class=\"text-muted m-b-0\">Scheduled</h5>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- Column -->\n        <!-- Column -->\n        <div class=\"col-lg-3 col-md-6\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <div class=\"d-flex no-block\">\n                        <div class=\"round align-self-center round-danger\"><i class=\"fa fa-calendar\"></i></div>\n                        <div class=\"m-l-10 align-self-center\">\n                            <h3 class=\"m-b-0\">{{intakeCount}}</h3>\n                            <h5 class=\"text-muted m-b-0\">Intake</h5>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- Column -->\n        <!-- Column -->\n        <div class=\"col-lg-3 col-md-6\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <div class=\"d-flex no-block\">\n                        <div class=\"round align-self-center round-success\"><i class=\"fa fa-calendar\"></i></div>\n                        <div class=\"m-l-10 align-self-center\">\n                            <h3 class=\"m-b-0\">{{checkoutCount}}</h3>\n                            <h5 class=\"text-muted m-b-0\">Checkout</h5>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- Column -->\n    </div>\n    <!-- Row -->\n    <!-- .row -->\n    <!-- <div class=\"row\">\n    <div class=\"col-md-4 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\"><small class=\"float-right text-success\"><i class=\"fa fa-sort-asc\"></i> 0% High\n                        then last month</small>Scheduled Appointments</h5>\n         \n            </div>\n            <div style=\"display: block\">\n\n                <div id=\"chart-container\">\n                    <canvas #myCanvas id=\"canvas\" baseChart [chartType]=\"chartType\" [datasets]=\"chartData1\"\n                        [labels]=\"chartLabels\" [colors]=\"chartColors1\" [options]=\"chartOptions\"></canvas>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-4 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\"><small class=\"float-right text-danger\"><i class=\"fa fa-sort-desc\"></i> 0% less\n                        then last month</small>Intake Appointments</h5>\n    \n            </div>\n            <div style=\"display: block\">\n\n                <div id=\"chart-container\">\n                    <canvas #myCanvas id=\"canvas\" baseChart [chartType]=\"chartType\" [datasets]=\"chartData\"\n                        [labels]=\"chartLabels\" [colors]=\"chartColors\" [options]=\"chartOptions\"></canvas>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-4 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\"><small class=\"float-right text-success\"><i class=\"fa fa-sort-asc\"></i> 0% High\n                        then last month</small>Checkout Appointments</h5>\n     \n            </div>\n            <div style=\"display: block\">\n\n                <div id=\"chart-container\">\n                    <canvas #myCanvas id=\"canvas\" baseChart [chartType]=\"chartType\" [datasets]=\"chartData2\"\n                        [labels]=\"chartLabels\" [colors]=\"chartColors2\" [options]=\"chartOptions\"></canvas>\n                </div>\n            </div>\n        </div>\n    </div>\n</div> -->\n    <!-- /.row -->\n    <!--row -->\n    <!-- <div class=\"row\">\n    <div class=\"col-md-6 col-lg-6 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Patients In</h5>\n                <ul class=\"list-inline text-center\">\n                    <li>\n                        <h5><i class=\"fa fa-circle m-r-5\" style=\"color: #00bfc7;\"></i>OPD</h5>\n                    </li>\n                    <li>\n                        <h5><i class=\"fa fa-circle m-r-5\" style=\"color: #b4becb;\"></i>ICU</h5>\n                    </li>\n                </ul>\n\n  <div>\n    <div style=\"display: block\">\n      <canvas baseChart\n              [datasets]=\"barChartData\"\n              [labels]=\"mbarChartLabels\"\n              [options]=\"barChartOptions\"\n              [colors]=\"barChartColors\"\n              [legend]=\"barChartLegend\"\n              [chartType]=\"barChartType\"\n              (chartHover)=\"chartHovered($event)\"\n              (chartClick)=\"chartClicked($event)\"></canvas>\n    </div>\n\n\n  </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-6 col-lg-6 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Hospital Earning</h5>\n                <ul class=\"list-inline text-center\">\n                    <li>\n                        <h5><i class=\"fa fa-circle m-r-5\" style=\"color: #00bfc7;\"></i>OPD</h5>\n                    </li>\n                    <li>\n                        <h5><i class=\"fa fa-circle m-r-5\" style=\"color: #b4becb;\"></i>ICU</h5>\n                    </li>\n                </ul>\n  <div>\n    <div style=\"display: block\">\n      <canvas baseChart\n              [datasets]=\"barChartData\"\n              [labels]=\"mbarChartLabels\"\n              [options]=\"barChartOptions\"\n              [colors]=\"barChartColors\"\n              [legend]=\"barChartLegend\"\n              [chartType]=\"barChartType\"\n              (chartHover)=\"chartHovered($event)\"\n              (chartClick)=\"chartClicked($event)\"></canvas>\n    </div>\n\n\n  </div>\n            </div>\n        </div>\n    </div>\n</div> -->\n    <!-- row -->\n    <!-- /row -->\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title m-b-0\"> Scheduled Appointments List</h5>\n                    <p class=\"text-muted\">Recent Appointments added in this month</p>\n                    <div class=\"table-responsive\">\n                        <table class=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Patient</th>\n                                    <th>date</th>\n                                    <th>Status</th>\n                                    <th>Action</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr class=\"cursor\" *ngFor=\"let h of apppointments;let i=  index\"\n                                    (click)=\"gotoPatientProfile(h.patient._id)\">\n                                    <td>{{i +1}}</td>\n                                    <td>{{h.patient.user.name}}</td>\n                                    <td>{{h.startDate | date : 'short' }}</td>\n                                    <td>{{h.status}}</td>\n                                    <td>\n                                        <a href=\"javascript:void(0)\">\n                                            <i (click)=\"navigateToCalender()\" class=\"fas fa-eye\"></i>\n                                        </a>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>\n<loader *ngIf=\"isLoader\"></loader>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { DashboardService } from 'src/app/dashboard/dashboard.service';\nimport { Router } from '@angular/router';\nimport { ResponseMessage } from 'src/app/_models/response';\nimport { Appointment } from 'src/app/_models/appointment';\nimport { is } from 'date-fns/locale';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  isLoader = false;\n  public ticketCount = 0;\n  public scheduledCount = 0;\n  public intakeCount = 0;\n  public checkoutCount = 0;\n  public apppointments: Appointment[] = [];\n\n\n\n  @ViewChild('myCanvas', { static: false })\n  public canvas: ElementRef;\n  public context: CanvasRenderingContext2D;\n  public chartType: string = 'line';\n  public chartData: any[];\n  public chartData1: any[];\n  public chartData2: any[];\n\n\n  public chartLabels: any[];\n  public chartColors: any[];\n  public chartColors1: any[];\n  public chartColors2: any[];\n  public chartOptions: any;\n\n  constructor(private dashboardService: DashboardService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.getData();\n    this.chartData = [{\n      data: [3, 1, 4, 2, 3],\n      label: 'Hospitals',\n      fill: true\n    }];\n    this.chartData1 = [{\n      data: [3, 1, 4, 2, 5],\n      label: 'Doctors',\n      fill: true\n    }];\n    this.chartData2 = [{\n      data: [3, 5, 4, 2, 1],\n      label: 'Patients',\n      fill: true\n    }];\n    this.chartLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May'];\n    this.chartColors = [{\n      backgroundColor: 'rgb(250,125,180)',\n      borderColor: '105,159,177,1'\n    }];\n    this.chartLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May'];\n    this.chartColors1 = [{\n      backgroundColor: 'rgb(99,216,252)',\n      borderColor: '153, 250, 166,1'\n    }];\n    this.chartLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May'];\n    this.chartColors2 = [{\n      backgroundColor: 'rgb(153, 250, 166)',\n      borderColor: '105,159,177,1'\n    }];\n    this.chartOptions = {\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            stepSize: 1\n          }\n        }]\n      },\n      annotation: {\n        drawTime: 'beforeDatasetsDraw',\n        annotations: [{\n          type: 'box',\n          id: 'a-box-1',\n          yScaleID: 'y-axis-0',\n          yMin: 0,\n          yMax: 1500,\n          backgroundColor: '#4cf03b'\n        }, {\n          type: 'box',\n          id: 'a-box-2',\n          yScaleID: 'y-axis-0',\n          yMin: 1,\n          yMax: 2.7,\n          backgroundColor: '#fefe32'\n        }, {\n          type: 'box',\n          id: 'a-box-3',\n          yScaleID: 'y-axis-0',\n          yMin: 2.7,\n          yMax: 5,\n          backgroundColor: '#fe3232'\n        }]\n      }\n    }\n\n\n  }\n  getData() {\n    this.isLoader = true;\n    this.dashboardService.getDoctorDashboard().subscribe((res: ResponseMessage) => {\n      if (res.status == '200') {\n        this.ticketCount = res.data.ticket;\n        this.scheduledCount = res.data.scheduled;\n        this.intakeCount = res.data.intake;\n        this.checkoutCount = res.data.checkout\n        this.apppointments = res.data.apppointments;\n        this.isLoader = false;\n      }\n    })\n  }\n  gotoPatientProfile(id) {\n    this.router.navigate([`app/patient/profile/${id}`]);\n  }\n  //barChart\n  public barChartOptions: any = {\n    scaleShowVerticalLines: false,\n    responsive: true\n  };\n\n  public mbarChartLabels: string[] = ['2012', '2013', '2014', '2015', '2016', '2017', '2018'];\n  public barChartType: string = 'bar';\n  public barChartLegend: boolean = true;\n\n  public barChartColors: Array<any> = [\n    {\n      backgroundColor: 'rgb(1, 192, 200)',\n      borderColor: 'rgba(105,159,177,1)',\n      pointBackgroundColor: 'rgba(105,159,177,1)',\n      pointBorderColor: '#fafafa',\n      pointHoverBackgroundColor: '#fafafa',\n      pointHoverBorderColor: 'rgba(105,159,177)'\n    },\n    {\n      backgroundColor: 'rgb(70, 159, 180)',\n      borderColor: 'rgba(77,20,96,1)',\n      pointBackgroundColor: 'rgba(77,20,96,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(77,20,96,1)'\n    }\n  ];\n  public barChartData: any[] = [\n    { data: [55, 60, 75, 82, 56, 62, 80], label: 'Company A' },\n    { data: [58, 55, 60, 79, 66, 57, 90], label: 'Company B' }\n  ];\n\n  // events\n  public chartClicked(e: any): void {\n    // console.log(e);\n  }\n\n  public chartHovered(e: any): void {\n    // console.log(e);\n  }\n\n  public randomize(): void {\n    let data = [\n      Math.round(Math.random() * 100),\n      Math.round(Math.random() * 100),\n      Math.round(Math.random() * 100),\n      (Math.random() * 100),\n      Math.round(Math.random() * 100),\n      (Math.random() * 100),\n      Math.round(Math.random() * 100)];\n    let clone = JSON.parse(JSON.stringify(this.barChartData));\n    clone[0].data = data;\n    this.barChartData = clone;\n  }\n\n  // naviagtes to calander\n  navigateToCalender() {\n    this.router.navigate(['app/calender']);\n  }\n\n}\n","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListComponent } from './list/list.component';\nimport { AddComponent } from './add/add.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      { path: '', component: ListComponent },\n      { path: 'add', component: AddComponent },\n      { path: 'dash', component: DashboardComponent },\n      { path: 'edit/:id', component: AddComponent },\n      { path: ':id', component: ProfileComponent },\n      { path: 'profile/:id', component: ProfileComponent },\n\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DocterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DocterRoutingModule } from './docter-routing.module';\nimport { ListComponent } from './list/list.component';\nimport { AddComponent } from './add/add.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { NgbsharedModule } from '../ngbshared/ngbshared.module';\nimport { NgxPermissionsModule } from 'ngx-permissions';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n\n\n@NgModule({\n  declarations: [ListComponent, AddComponent, ProfileComponent, DashboardComponent],\n  imports: [\n    CommonModule,\n    DocterRoutingModule,\n    SharedModule,\n    NgbsharedModule,\n    NgxPermissionsModule,\n\n  ]\n})\nexport class DocterModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Doctor } from '../_models/doctor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DoctorService {\n\n  constructor(private httpClient: HttpClient) { }\n  post(doctor) {\n    return this.httpClient.post('api/createDoctor', doctor);\n  }\n  get(page = 0, limit = 10, active = true) {\n    return this.httpClient.get(`api/doctors?page=${page}&limit=${limit}&active=${active}`);\n  }\n  getById(id) {\n    return this.httpClient.get(`api/doctors/${id}`);\n  }\n\n  upateDoctor(id, value) {\n    return this.httpClient.put(`api/updateDoctor/${id}`, value);\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <div class=\"card o-hidden\">\n            <div class=\"card-body\">\n                <div class=\"col-md-4 p-3\">\n                    <div class=\"right-inner-addon\">\n                        <ng-select [items]=\"doctorsList\" placeholder=\"Search Doctor\" bindLabel=\"name\" autofocus\n                            bindValue=\"_id\" [typeahead]=\"doctorInput$\" (change)=\"onSearchChange($event)\">\n                            <ng-template ng-label-tmp let-item=\"item\">\n                                <span *ngIf=\"item.user\">{{item.user.username}}-{{item.user.name}}</span>\n                            </ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\">\n                                {{item.user.username}}-{{item.user.name}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n                </div>\n                <div class=\"\">\n\n                    <div class=\"table-responsive\">\n                        <table class=\"table text-left\" *ngIf=\"!isLoader\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Personal Info</th>\n                                    <th scope=\"col\">Cadre</th>\n                                    <th scope=\"col\">Department</th>\n                                    <th scope=\"col\">File No.</th>\n                                    <th scope=\"col\">Gender</th>\n                                    <th scope=\"col\">Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <div *ngIf=\"doctors == null ||doctors?.length==0\">\n                                    <h5>No Record Found</h5>\n                                </div>\n                                <tr *ngFor=\"let item of doctors; let i = index \" class=\"dataTables_wrapper\">\n                                    <td class=\"table-srno\">{{i + ((page - 1) * limit)+1}}</td>\n                                    <td>\n                                        <p class=\"m-0\"><a href=\"javascript:void(0)\" (click)=\"onClick(item._id)\">\n                                                {{item.user.name}}</a></p>\n                                        <p class=\"m-0\">{{item.user.email}}</p>\n                                        <p class=\"m-0\">{{item.user.phone}}</p>\n                                    </td>\n                                    <td class=\"Cadre\">\n                                        {{item.cadre}}\n                                    </td>\n                                    <td class=\"department\">\n                                        <p class=\"m-0\">{{item?.department}}</p>\n                                        <p class=\"m-0\">{{item?.specialty}}</p>\n                                    </td>\n                                    <td class=\"file-no\">\n                                        {{item.user.username}} </td>\n\n                                    <td class=\"Gender\">\n                                        {{item.gender}} </td>\n                                    <td>\n                                        <a href=\"javascript:void(0)\">\n                                            <i (click)=\"onClick(item._id)\" class=\"fas fa-eye\"></i>\n                                        </a>\n                                    </td>\n                                    <!-- <td><button type=\"button\" class=\"btn btn-success\" (click)=\"onClickEdit(item._id)\">\n                                            Edit</button> &nbsp;\n                                        <button type=\"button\" class=\"btn btn-danger\" (click)=\"delet(i)\"> Delete</button>\n                                    </td> -->\n                                </tr>\n\n\n                            </tbody>\n                        </table>\n                        <loader *ngIf=\"isLoader\"></loader>\n                    </div>\n                </div>\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12 d-flex justify-content-between\">\n                            <span class=\"pt-3\">showing {{((page-1) * limit) + doctors?.length }} of {{totalCount}}\n                                entries</span>\n                            <app-pagination (onPageChange)=\"onClickPage($event)\" [page]='this.page' [limit]='this.limit'\n                                [totalDocs]='this.totalCount'> </app-pagination>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DoctorService } from '../doctor.service';\nimport { Doctor } from 'src/app/_models/doctor';\nimport { ResponseMessage } from 'src/app/_models/response';\nimport Swal from 'sweetalert2';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthService } from 'src/app/auth.service';\nimport { Subject } from 'rxjs';\nimport { SearchService } from 'src/app/shared/search.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  isLoader = false;\n  page = 1;\n  limit = 20;\n  doctors: Doctor[];\n  totalCount = 0;\n\n  // sweeet alert\n  doctorsList: Doctor[] = [];\n  doctorInput$ = new Subject<string>();\n  constructor(\n    private router: Router,\n    private modalService: NgbModal,\n    private modal: NgbModal,\n    private doctorService: DoctorService,\n\n    private searchService: SearchService,\n    private userService: AuthService) { }\n\n  ngOnInit() {\n    this.get();\n    this.doctorInput$.subscribe(\n      txt => {\n\n        this.searchDoctor(txt)\n      })\n  }\n\n  openVerticallyCentered(content) {\n    this.modalService.open(content);\n  }\n\n  searchDoctor(txt = 'MFP') {\n    this.searchService.searchDoctor(txt).subscribe((response: ResponseMessage) => {\n      if (response.status == '200') {\n        this.doctorsList = response.data;\n      } else {\n        this.doctorsList = [];\n      }\n    });\n  }\n  // Delete Alert\n  delet(index) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Doctor will be Deleted',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        this.toggleDelete(index);\n        Swal.fire(\n          'Deleted!',\n          'Doctor has been deleted.',\n          'success'\n        )\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n          'Doctor not deleted',\n          'error'\n        )\n      }\n    });\n  }\n  onSearchChange(event) {\n    this.onClick(event._id)\n  }\n  // gets all Doctors from db\n  get() {\n    this.isLoader = true;\n    this.doctorService.get(this.page, this.limit).subscribe((res: ResponseMessage) => {\n      if (res.status == '200') {\n        // console.log(res);\n\n        this.doctors = res.data.docs;\n        this.totalCount = res.data.c;\n        this.isLoader = false;\n      } else {\n        this.isLoader = false;\n        this.doctors = [];\n      }\n      console.log(this.doctors)\n    })\n  }\n\n  toggleDelete(index) {\n    this.userService.toggleDelete(this.doctors[index].user._id).subscribe((res: any) => {\n      if (res.status === 200) {\n        console.log('doctor deleted');\n        this.get();\n      }\n    })\n  }\n\n\n  // Mavigates to Doctor's Profile Page\n  onClick(id) {\n    this.router.navigate(['/app/doctor/' + id]);\n  }\n\n  // Mavigates to Doctor's Profile Page\n  onClickEdit(id) {\n    this.router.navigate(['/app/doctor/edit/' + id]);\n  }\n\n  // onClickPage(page = 0) {\n  //   this.page = page;\n  //   this.get();\n  // }\n\n  onClickPage(e: any) {\n    this.page = e.page;\n    this.limit = e.limit;\n    this.get();\n  }\n}\n","<!-- Row -->\n<div class=\"row\" *ngIf=\"!isLoader\">\n    <!-- Column -->\n    <div class=\"col-lg-4 col-xlg-3 col-md-5\">\n        <div class=\"card\">\n            <div class=\"user-bg\"> <img width=\"100%\" alt=\"user\" [src]=\"ImageSrc\"> </div>\n            <div class=\"card-body\">\n                <!-- .row -->\n                <div class=\"row text-center m-t-10\">\n                    <div class=\"col-md-6 col-6 b-r\">\n                        <strong>Name</strong>\n                        <p>{{doctor?.user.name}}</p>\n                    </div>\n                    <div class=\"col-md-6 col-6\"><strong>Occupation</strong>\n                        <p>{{doctor?.cadre}}</p>\n                    </div>\n                </div>\n                <hr>\n                <!-- /.row -->\n                <!-- .row -->\n                <div class=\"row text-center m-t-10\">\n                    <div class=\"col-md-6 col-6 b-r\"><strong>Email ID</strong>\n                        <p>{{doctor?.user.email}}</p>\n                    </div>\n                    <div class=\"col-md-6 col-6\"><strong>Phone</strong>\n                        <p>{{doctor?.user.phone}}</p>\n                    </div>\n                </div>\n                <!-- /.row -->\n                <hr>\n                <!-- .row -->\n                <div class=\"row text-center m-t-10\">\n                    <div class=\"col-md-12\"><strong>Address</strong>\n                        <p *ngIf=\"doctor?.user\">\n                            {{doctor?.user | address}}\n                        </p>\n                    </div>\n                </div>\n                <hr>\n                <button *ngxPermissionsOnly=\"['hospital']\" type=\"button\" class=\"btn  btn-block \"\n                    [ngClass]=\"doctor?.user?.active ? 'btn-outline-primary' : 'btn-outline-success'\"\n                    (click)=\"markAsActive()\" style=\"text-align: center;\"> Mark as\n                    {{doctor.user?.active ? 'Inactive' : 'Active'}}\n                </button>\n\n            </div>\n        </div>\n    </div>\n    <!-- Column -->\n    <!-- Column -->\n    <div class=\"col-lg-8 col-xlg-9 col-md-7\">\n        <div class=\"card\">\n\n            <!-- Nav tabs -->\n            <div style=\"padding-top: 10px; padding-right: 10px ;\">\n                <ul class=\"nav nav-tabs profile-tab align-items-center\" role=\"tablist\">\n                    <li class=\"nav-item\"> <a class=\"nav-link\" [ngClass]=\"{active: tab === 1}\" data-toggle=\"tab\"\n                            href=\"javascript::void(0)\" (click)=\"onclickTab(1)\" role=\"tab\">About</a> </li>\n                    <li *ngxPermissionsOnly=\"['doctor']\" class=\"nav-item\"> <a class=\"nav-link\"\n                            [ngClass]=\"{active: tab === 2}\" data-toggle=\"tab\" href=\"javascript::void(0)\"\n                            (click)=\"goToEdit()\" role=\"tab\">Update Details</a> </li>\n                    <li *ngIf=\"authService.currentUserValue._id !== this.doctor?.user._id\" class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"javascript::void(0)\" (click)=\"chat()\"> <i\n                                class=\"fa fa-comment-alt\"></i> Message</a>\n                    </li>\n                    <li class=\"ml-auto\">\n                      <button [routerLink]=\"['/app/calender/book']\" class=\"btn btn-info d-lg-block m-10\" type=\"button\"><i\n                              class=\"fa fa-calendar\" aria-hidden=\"true\"></i> Schedule Appointment</button>\n\n                  </li>\n                </ul>\n            </div>\n            <!-- Tab panes -->\n            <div class=\"tab-content\">\n\n                <!--second tab-->\n                <div class=\"tab-pane \" [ngClass]=\"{active: tab === 1}\" id=\"profile\" role=\"tabpanel\">\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-md-3 col-6 mb-10 b-r\"> <strong>File No.</strong>\n\n                                <p class=\"text-muted\">{{doctor?.user.username}}</p>\n                            </div>\n                            <div class=\"col-md-3 col-6 mb-10 b-r h-b\"> <strong>Cadre</strong>\n\n                                <p class=\"text-muted\">{{doctor?.cadre}}</p>\n                            </div>\n                            <div class=\"col-md-3 col-6 b-r\"> <strong>Department</strong>\n\n                                <p class=\"text-muted\">{{doctor?.department}}</p>\n                            </div>\n\n                            <div class=\"col-md-3 col-6\"> <strong>Location</strong>\n\n                                <p class=\"text-muted\">{{doctor?.user.city}}</p>\n                            </div>\n                        </div>\n                        <hr>\n                        <h3>Biography</h3>\n                        <p>{{doctor?.description}}</p>\n                        <h4 class=\"font-medium m-t-30\">Status: &nbsp; <span class=\"label \"\n                                [ngClass]=\"doctor?.user.active ? 'label-success' : 'label-primary'\"\n                                style=\"padding: 10px;\">{{doctor?.user.active ? 'active' : 'inactive'}}</span></h4>\n\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n    <!-- Column -->\n</div>\n<loader *ngIf=\"isLoader\"></loader>\n<!-- Row -->\n","import { Component, OnInit } from '@angular/core';\nimport { DoctorService } from '../doctor.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ResponseMessage } from 'src/app/_models/response';\nimport { Doctor } from 'src/app/_models/doctor';\nimport { environment } from 'src/environments/environment';\nimport { ChatService } from 'src/app/inbox/chat.service';\nimport { NotifyService } from 'src/app/shared/notify.service';\nimport { AuthService } from 'src/app/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  isLoader = false;\n  tab = 1;\n  doctor: Doctor;\n  constructor(private doctorService: DoctorService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private chatService: ChatService,\n    private notifyService: NotifyService,\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      console.log(params['id'])\n      this.get(params['id']);\n\n    });\n  }\n  get(id) {\n    this.isLoader = true;\n    this.doctorService.getById(id).subscribe((res: ResponseMessage) => {\n      console.log(res.data)\n      if (res.status == '200') {\n        this.doctor = res.data;\n        this.isLoader = false;\n\n      } else {\n        this.router.navigate(['app/hospitals']);\n      }\n\n    })\n  }\n\n  get ImageSrc() {\n    if (this.doctor) {\n\n      return environment.base_url + this.doctor.user.image;\n    }\n    return environment.base_url + 'images/user.jpg';\n  }\n  onclickTab(tab) {\n    this.tab = tab;\n  }\n\n  chat() {\n    this.chatService.addfriend(this.doctor.user._id).subscribe((res: ResponseMessage) => {\n      if (+res.status === 200) {\n        this.router.navigate([`app/inbox/${this.doctor.user._id}`]);\n      }\n    })\n  }\n  markAsActive() {\n\n    this.authService.toggleactive(this.doctor.user._id).subscribe((res: ResponseMessage) => {\n      if (res.status == '200') {\n        this.doctor.user.active = !this.doctor.user.active;\n        this.notifyService.success(res.data.msg);\n      }\n    });\n  }\n  // [routerLink]=\"['/app/doctor/edit/', doctor._id]\"\n  goToEdit() {\n    this.router.navigate(['/app/doctor/edit/', this.doctor._id], { queryParams: { returnUrl: this.router.url } });\n  }\n}"],"sourceRoot":"webpack:///"}